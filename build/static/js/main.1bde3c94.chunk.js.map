{"version":3,"sources":["assets/MyDoubleLucky.jpeg","components/private/main/logs/createNewLog/CreateNewLog.js","components/private/main/logs/createNewLog/index.js","components/private/main/logs/log/Log.js","components/private/main/logs/log/index.js","utils/decodeToken.js","components/global/Modal/Modal.js","components/global/Modal/index.js","components/global/loadingComponent.js","components/private/main/logs/Logs.js","components/private/main/logs/index.js","components/private/main/navigation/Navigation.js","components/private/main/navigation/index.js","components/private/main/Main.js","components/private/main/index.js","components/private/postNewLog/title/Title.js","components/private/postNewLog/title/index.js","components/private/postNewLog/backButton/BackButton.js","components/private/postNewLog/backButton/index.js","uri/uri.js","components/private/postNewLog/postNewLog.js","components/private/postNewLog/index.js","components/private/logDetail/block/Block.js","components/private/logDetail/block/index.js","components/private/logDetail/previousButton/previousButton.js","components/private/logDetail/previousButton/index.js","components/private/logDetail/nextButton/nextButton.js","components/private/logDetail/nextButton/index.js","components/private/logDetail/logDetail.js","components/private/logDetail/index.js","components/private/editLogPage/editLogPage.js","components/private/editLogPage/index.js","components/private/index.js","components/private/PrivateComponent.js","components/public/main/copyright/Copyright.js","components/public/main/copyright/index.js","components/public/main/navigation/Navigation.js","components/public/main/navigation/index.js","components/public/main/myDoubleLucky/MyDoubleLucky.js","components/public/main/myDoubleLucky/index.js","components/public/main/MainComponent.js","components/public/main/index.js","components/public/signin/label/Label.js","components/public/signin/label/index.js","components/public/signin/form/Form.js","components/public/signin/form/index.js","components/public/signin/SignIn.js","components/public/signin/index.js","components/public/signup/label/Label.js","components/public/signup/label/index.js","components/public/signup/form/Form.js","components/public/signup/form/index.js","components/public/signup/signup.js","components/public/signup/index.js","components/public/verify/form/Form.js","components/public/verify/form/index.js","components/public/verify/Verify.js","components/public/verify/index.js","components/public/index.js","components/public/PublicComponent.js","App.js","index.js"],"names":["module","exports","Container","styled","div","CreateNewLog","style","textDecoration","to","React","Component","BackgroundImage","img","Text","props","image","TrashIcon","i","EditIcon","PrivateIcon","Date","LogComponent","LogComponentClicked","id","window","location","href","editIconClicked","e","stopPropagation","trashIconClicked","turnOnModalByClickingTrashIcon","logIdToDeleteFunc","console","log","this","title","private2","year","month","day","onClick","className","src","decodeToken","token","localStorage","getItem","jwt","verify","Box","Title","h2","Message","p","ButtonContainer","Button","button","ModalComponent","message","noButtonClicked","okayButtonClicked","LoadingComponent","type","color","height","width","getMyLogsLength","gql","deleteALog","getMyLogs","LogsComponent","state","logs","page","modal","modalTitle","modalMessage","logIdToDelete","loadingComponent","totalLogsLength","loading","currentLogsLength","trackScrolling","a","wrappedElement","document","getElementById","userId","isBottom","client","query","variables","newQueryResponse","newMyLogs","data","myLogs","newMyLogsLength","length","setState","mutate","mutation","logId","response","updatedLogs","filter","removeEventListener","addEventListener","lengthData","map","index","key","el","parseInt","getBoundingClientRect","bottom","innerHeight","TitleText","NormalText","NavigationBar","logoutButtonClicked","removeItem","MainComponent","TitleImageContainer","Select","select","TitleImage","input","file","ImageUploadButton","ImageUploadIcon","ImageDeleteIcon","TitleComponent","titleImage","TitleImageDeleteButtonClicked","titleImageDeleteButtonClicked","value","TitleImageUploadButtonClicked","URL","createObjectURL","target","files","handleInput","name","imageFile","titleImageUploadButtonClicked","edit","privateAsArgs","onChange","accept","BackButton","text","uri","dotenv","config","editor","counter","uploadedImagesPublicIds","destroyImageMutation","addNewLogMutation","addBlock","Editor","PostNewLog","imageUrl","uploading","requestToGraphqlServerInOrder","blockLength","blocks","block","url","publicId","caption","stretched","withBackground","withBorder","then","res","level","link","meta","description","service","source","embed","submitButtonClicked","time","getTime","toString","formData","FormData","append","xhr","XMLHttpRequest","open","send","imageResponse","JSON","parse","responseText","secure_url","imagePublicId","public_id","addNewLog","save","outputData","catch","err","error","alert","EditorJs","holder","tools","linkTool","class","LinkTool","endpoint","header","Header","inlineToolbar","Embed","services","youtube","ImageTool","uploader","uploadByFile","signature","push","success","uploadByUrl","fetch","blob","lastModifiedDate","delay","start","compose","graphql","YoutubeVideo","iframe","Caption","CaptionText","ImageContainer","Image","HeaderContainer","EmbedLinkContainer","LinkTitle","LinkDesc","LinkImage","BlockComponent","replaceAll","str","searchStr","replaceStr","replace","RegExp","paddingTop","paddingBottom","PreviousButton","buttonClicked","NextButton","getLog","TitleContainer","BlocksContainer","LogDetail","match","params","logData","previousLogId","nextLogId","withRouter","deleteAllLogsFromLog","changeLogImage","changeLogTitle","SubmitButton","EditLogPage","titleImageChanged","pbId","undefined","editButtonClicked","newTitle","privateAsArg","method","body","json","newImage","result","blockLengths","changeLogTitleResponse","PrivateComponent","path","exact","component","Copyright","SignInButton","SignUpButton","TitleLogo","h1","PhotoContainer","Photo","WhiteText","MyDoubleLucky","require","PublicMainComponent","Row","Label","UnderLine","attrs","disabled","LabelComponent","password","checkPassword","phone","email","InputComponent","FormComponent","placeholder","addNewUserMutation","SignInComponentsContainer","SignInComponent","addNewUser","user","loginMutation","LabelAndFormComponentsContainer","SignUpComponent","login","setItem","allocateAuthKeyToUser","verifyUser","Input","verifyKey","verified","VerifyComponent","PublicComponent","ApolloClient","AlphaTestVersion","App","isLoggedIn","AppContainer","ReactDOM","render"],"mappings":"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","file":"static/js/main.1bde3c94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyDoubleLucky.38372de1.jpeg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    width: 265px;\n    height: 204px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    margin-left: 25px;\n    margin-right: 25px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    background:#dfe6e9;\n    box-shadow: 0px 0px 5px -1px rgba(0,0,0,0.63);\n    cursor: pointer;\n    transition:0.3s;\n    color:black;\n    \n    &:hover {\n        background:#f5f6fa;\n    }\n    text-decoration:none;\n`\n\nclass CreateNewLog extends React.Component {\n    render() {\n        return <Link style={{ textDecoration: 'none' }} to={'/post'}>\n            <Container>\n                create new log\n        </Container>\n        </Link>\n    }\n}\n\nexport default CreateNewLog","import CreateNewLog from './CreateNewLog';\nexport default CreateNewLog","import React from 'react'\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\noverflow:hidden;\nposition: relative;\nwidth: 265px;\nheight: 204px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nborder-radius: 4px;\nmargin-left: 25px;\nmargin-right: 25px;\nmargin-top: 20px;\nmargin-bottom: 20px;\nbackground:#dfe6e9;\nbox-shadow: 0px 0px 5px -1px rgba(0,0,0,0.63);\ncursor: pointer;\ntransition:0.3s;\ncolor:black;\n&:hover {\n    background:#f5f6fa;\n}\ntext-decoration:none;\n`\nconst BackgroundImage = styled.img`\n    object-fit:cover;\n    width:100%;\n    height:100%;\n    ${Container}:hover & {\n        opacity:0.7;\n    }  \n`\n\nconst Text = styled.div`\n    \n    font-weight:600;\n    position: absolute;\n    color:${props => props.image ? 'white' : 'black'};\n`\n\nconst TrashIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    top:10px;\n    left:10px;\n    opacity:0;\n    ${Container}:hover & {\n        opacity:1;\n        z-index:3;\n    }\n`\n\nconst EditIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    top:10px;\n    left:36px;\n    opacity:0;\n    ${Container}:hover & {\n        opacity:1;\n        z-index:3;\n    }\n`\n\nconst PrivateIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    bottom:10px;\n    left:10px;\n    \n`\n\nconst Date = styled.div`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    bottom:10px;\n    right:10px;\n    z-index:2;\n    font-size:11px;\n`\n\n\nclass LogComponent extends React.Component {\n\n\n    render() {\n        const { title, image, private2, year, month, day } = this.props;\n        const { trashIconClicked, LogComponentClicked, editIconClicked } = this;\n        return <Container onClick={LogComponentClicked}>\n            <TrashIcon image={image} onClick={trashIconClicked} className={'fas fa-trash-alt'} />\n            <EditIcon onClick={editIconClicked} image={image} className={'far fa-edit'} />\n            <Date image={image}>{day} {month} {year}</Date>\n            {private2 && <PrivateIcon image={image} className={'fas fa-lock'} />}\n            {image && <BackgroundImage src={image} />}\n            <Text image={image}>{title}</Text>\n\n        </Container>\n\n    }\n\n    LogComponentClicked = () => {\n        const { id } = this.props;\n        window.location.href = `/log/${id}`\n    }\n\n    editIconClicked = e => {\n        e.stopPropagation();\n        const { id } = this.props;\n        window.location.href = `/edit/log/${id}`\n    }\n\n    trashIconClicked = (e) => {\n        e.stopPropagation();\n        const { id, turnOnModalByClickingTrashIcon, logIdToDeleteFunc } = this.props;\n        turnOnModalByClickingTrashIcon()\n        logIdToDeleteFunc(id)\n        console.log(`${id} trash icon clicked!`)\n\n    }\n\n}\n\nexport default LogComponent","import LogComponent from './Log';\nexport default LogComponent","import jwt from 'jsonwebtoken';\n\nexport const decodeToken = () => {\n    const token = localStorage.getItem('jwt')\n    const decoded = jwt.verify(token, 'rlog')\n    return decoded.id\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.5);\n    color:white;\n    display:flex;\n    justify-content:center;\n`\n\nconst Box = styled.div`\n    margin-top:50px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    color:black;\n    width: 40%;\n    height: 40%;\n    background: white;\n    border-radius: 2px;\n    position: relative;\n`\n\nconst Title = styled.h2``\n\nconst Message = styled.p`\n    width: 80%;\n`\n\nconst ButtonContainer = styled.div`\n    display:flex;\n    position:absolute;\n    bottom:20px;\n`\n\nconst Button = styled.button`\n    background: white;\n    border: 0;\n    font-size: 16px;\n    cursor: pointer;\n    margin-right: 10px;\n`\n\nclass ModalComponent extends React.Component {\n    render() {\n        const { title, message, noButtonClicked, okayButtonClicked } = this.props;\n        return <Container>\n            <Box>\n                <Title>\n                    {title}\n                </Title>\n                <Message>\n                    {message}\n                </Message>\n                <ButtonContainer>\n                    <Button onClick={okayButtonClicked}>Okay</Button>\n                    <Button onClick={noButtonClicked}>No</Button>\n                </ButtonContainer>\n            </Box>\n        </Container>\n    }\n}\n\nexport default ModalComponent;","import ModalComponent from './Modal';\nexport default ModalComponent;","import React from 'react'\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nconst Container = styled.div`\n    position:fixed;\n    z-index:10;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    background:rgba(0,0,0,0.5);\n`\n\nconst LoadingComponent = () => <Container>\n    <Loader\n        type=\"Audio\"\n        color=\"#d63031\"\n        height={100}\n        width={100}\n    // timeout={3000} //3 secs\n\n    />\n</Container>\n\nexport default LoadingComponent","import React from 'react';\nimport styled from 'styled-components';\nimport CreateNewLog from './createNewLog';\nimport LogComponent from './log';\nimport { client } from 'App'\nimport { gql } from 'apollo-boost';\nimport { decodeToken } from 'utils/decodeToken';\nimport ModalComponent from 'components/global/Modal';\nimport LoadingComponent from 'components/global/loadingComponent';\n\nconst getMyLogsLength = gql`\nquery($userId:String!){\n  getMyLogsLength(userId:$userId) {\n      length\n    }\n  }\n`\n\nconst deleteALog = gql`\nmutation($logId:String!, $userId:String!) {\n    deleteALogV2(logId:$logId,userId:$userId) {\n      id\n      title\n    }\n  }\n`\n\nconst getMyLogs = gql`\nquery MyLogs(\n    $userId:String!,\n    $page:Int!\n){\n    myLogs(userId:$userId,page:$page) {\n      id\n      title\n      image\n      private2\n      year\n      month\n      day\n    }\n  }\n`\n\nconst Container = styled.div`\n    /* width:80%;\n    display:flex; */\n    width: 88%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    /* min-width: 1267px; */\n\n`\n\nclass LogsComponent extends React.Component {\n    state = {\n        logs: [],\n        page: 1,\n        modal: false,\n        modalTitle: \"\",\n        modalMessage: \"\",\n        logIdToDelete: \"\",\n        loadingComponent: false,\n        totalLogsLength: 0,\n        loading: true,\n        currentLogsLength: 0\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n    }\n\n    async componentDidMount() {\n\n        // To detect users scrolls to bottom of div with React js\n        document.addEventListener('scroll', this.trackScrolling);\n\n\n        const userId = decodeToken();\n        const lengthData = await client.query({\n            query: getMyLogsLength,\n            variables: {\n                userId\n            }\n        })\n        const totalLogsLength = lengthData.data.getMyLogsLength.length\n        const { page } = this.state;\n        const response = await client.query({\n            query: getMyLogs,\n            variables: {\n                userId,\n                page\n            }\n        })\n        const myLogs = response.data.myLogs;\n        const currentLogsLength = response.data.myLogs.length;\n        this.setState({\n            logs: myLogs,\n            page: this.state.page + 1,\n            totalLogsLength,\n            loading: false,\n            currentLogsLength\n        })\n\n    }\n\n    render() {\n        const { logs, modal, modalMessage, modalTitle, loadingComponent, loading } = this.state;\n        const { turnOnModalByClickingTrashIcon, okayButtonClicked, noButtonClicked, logIdToDeleteFunc } = this;\n        if (loading) {\n            return \"Loading....\"\n        } else {\n            return <Container id={'logsContainer'}>\n                <CreateNewLog />\n                {logs.map((log, index) => {\n                    const { id, title, image, private2, year, month, day } = log;\n                    // let previousLogId = null;\n                    // let nextLogId = null;\n                    // if (logs[index + 1]) {\n                    //     previousLogId = logs[index + 1].id;\n                    // }\n                    // if (logs[index - 1]) {\n                    //     nextLogId = logs[index - 1].id;\n                    // }\n                    return <LogComponent year={year} month={month} day={day} private2={private2} logIdToDeleteFunc={logIdToDeleteFunc} turnOnModalByClickingTrashIcon={turnOnModalByClickingTrashIcon} key={id} id={id} title={title} image={image} />\n                })}\n                {loadingComponent && <LoadingComponent />}\n                {modal && <ModalComponent okayButtonClicked={okayButtonClicked} noButtonClicked={noButtonClicked} title={modalTitle} message={modalMessage} />}\n            </Container>\n        }\n    }\n\n    isBottom(el) {\n\n        return parseInt(el.getBoundingClientRect().bottom) <= window.innerHeight;\n    }\n\n    trackScrolling = async () => {\n        const wrappedElement = document.getElementById('logsContainer');\n        const { page, currentLogsLength, totalLogsLength } = this.state;\n        const userId = decodeToken();\n\n        if (this.isBottom(wrappedElement)) {\n            // I have to check there left more logs in database\n            // I have to know how many logs now I have right now,\n\n            // then I have to know how many logs I have in my server\n            // Only procceed when there left more logs than I get right now.\n            if (currentLogsLength < totalLogsLength) {\n                console.log('logs container bottom reached');\n                const newQueryResponse = await client.query({\n                    query: getMyLogs,\n                    variables: {\n                        userId,\n                        page\n                    }\n                })\n                const newMyLogs = newQueryResponse.data.myLogs;\n                const newMyLogsLength = newQueryResponse.data.myLogs.length;\n                this.setState({\n                    logs: [\n                        ...this.state.logs,\n                        newMyLogs\n                    ],\n                    page: this.state.page + 1,\n                    currentLogsLength: this.state.currentLogsLength + newMyLogsLength\n                })\n            }\n\n        }\n    }\n\n    turnOnModalByClickingTrashIcon = () => {\n        this.setState({\n            modal: true,\n            modalTitle: \"Caution\",\n            modalMessage: \"If you delete this log, you will never retrieve this log. Are you sure delete this log?\"\n        })\n    }\n\n    okayButtonClicked = async () => {\n        console.log('okay button clicked!')\n        this.setState({\n            loadingComponent: true\n        })\n        const { logIdToDelete } = this.state;\n        const userId = decodeToken();\n        const response = await client.mutate({\n            mutation: deleteALog,\n            variables: {\n                logId: logIdToDelete,\n                userId\n            }\n        })\n\n        const updatedLogs = this.state.logs.filter(log => log.id !== logIdToDelete)\n        this.setState({\n            logs: updatedLogs\n        })\n\n\n        console.log('response: ', response)\n        this.setState({\n            loadingComponent: false,\n            modal: false,\n            modalTitle: \"\",\n            modalMessage: \"\"\n        })\n    }\n\n    noButtonClicked = () => {\n        console.log('no button clicked!')\n        this.setState({\n            modal: false,\n            modalTitle: \"\",\n            modalMessage: \"\"\n        })\n    }\n\n    logIdToDeleteFunc = (logId) => {\n        this.setState({\n            logIdToDelete: logId\n        })\n    }\n\n}\n\nexport default LogsComponent","import LogsComponent from './Logs';\nexport default LogsComponent","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width: 90%;\n    height: 6vh;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst TitleText = styled.div`\n    font-size: 21px;\n    font-weight: 200;\n    cursor: pointer;\n`\n\nconst NormalText = styled.div`\n    cursor: pointer;\n`\n\nclass Navigation extends React.Component {\n    render() {\n        const { logoutButtonClicked } = this;\n        return <Container>\n            <TitleText>R log</TitleText>\n            <NormalText>\n                profile\n            </NormalText>\n            <NormalText onClick={logoutButtonClicked}>\n                logout\n            </NormalText>\n        </Container>\n    }\n\n    logoutButtonClicked = () => {\n        localStorage.removeItem('jwt')\n        window.location.href = '/'\n    }\n}\n\nexport default Navigation","import NavigationBar from './Navigation'\nexport default NavigationBar","import React from 'react';\nimport styled from 'styled-components';\nimport LogsComponent from './logs';\nimport NavigationBar from './navigation';\n\n\nconst Container = styled.div`\n    width:100%;\n    min-height:100vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nclass MainComponent extends React.Component {\n    render() {\n        return <Container>\n            <NavigationBar />\n            <LogsComponent />\n        </Container>\n    }\n}\n\nexport default MainComponent","import MainComponent from './Main';\nexport default MainComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst TitleImageContainer = styled.div`\n    width:50%;\n    position: relative;\n    height:200px;\n    overflow:hidden;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-top:10px;\n`\n\nconst Select = styled.select`\n    border: 0;\n    background: white;\n    outline:none;\n`\n\nconst TitleImage = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 3px;\n`\n\nconst Title = styled.input`\n    color:${props => props.file ? 'white' : 'black'};\n    position: absolute;\n    border: 0;\n    font-size: 20px;\n    text-align: center;\n    border-bottom: ${props => props.file ? '0px' : '1px solid black'};\n    width: 48%;\n    padding-bottom: 10px;\n    outline:none;\n    background: transparent;\n\n`\n\nconst ImageUploadButton = styled.input`\n    position: absolute;\n    top: 12px;\n    left: 19px;\n    width: 20px;\n    height: 20px;\n    opacity: 0;\n    z-index:2;\n    cursor: pointer;\n`\n\nconst ImageUploadIcon = styled.i`\n    color: ${props => props.file ? 'white' : 'black'};\n    font-size: 20px;\n    position: absolute;\n    top: 12px;\n    left: 20px;\n    cursor: pointer;\n`\n\nconst ImageDeleteIcon = styled.i`\n    color: white;\n    font-size: 15px;\n    position: absolute;\n    top: 41px;\n    left: 22px;\n    -webkit-transform: skew(45deg,-45deg);\n    -ms-transform: skew(45deg,-45deg);\n    transform: skew(45deg,-45deg);\n    cursor: pointer;\n`\n\nclass TitleComponent extends React.Component {\n    state = {\n        title: \"\",\n        titleImage: null,\n        file: null\n    }\n    render() {\n        // const { title, titleImage, file } = this.state;\n        const { title, imageFile, handleInput, edit, titleImageUploadButtonClicked, privateAsArgs } = this.props;\n        const { TitleImageDeleteButtonClicked } = this;\n        return <Container>\n            <TitleImageContainer>\n                {imageFile && <TitleImage src={imageFile} />}\n                <Title file={imageFile} onChange={handleInput} name={'title'} value={title} />\n                {/* {edit !== true && <ImageUploadButton id={'ImageUploadButton'} onChange={titleImageUploadButtonClicked} accept=\"image/*\" type={'file'} />}\n                {edit !== true && <ImageUploadIcon file={imageFile} className={'fas fa-plus'} />}\n\n                {(imageFile && edit !== true) && <ImageDeleteIcon onClick={TitleImageDeleteButtonClicked} className={'fas fa-plus'} />} */}\n                <ImageUploadButton id={'ImageUploadButton'} onChange={titleImageUploadButtonClicked} accept=\"image/*\" type={'file'} />\n                <ImageUploadIcon file={imageFile} className={'fas fa-plus'} />\n                {imageFile && <ImageDeleteIcon onClick={TitleImageDeleteButtonClicked} className={'fas fa-plus'} />}\n            </TitleImageContainer>\n            <Select onChange={handleInput} value={privateAsArgs} name={'privateAsArgs'}>\n                <option value={true}>private</option>\n                <option value={false}>public</option>\n            </Select>\n        </Container>\n    }\n\n    TitleImageDeleteButtonClicked = () => {\n        const { titleImageDeleteButtonClicked } = this.props;\n        titleImageDeleteButtonClicked();\n        document.getElementById(\"ImageUploadButton\").value = \"\";\n    }\n\n    TitleImageUploadButtonClicked = e => {\n        this.setState({\n            file: URL.createObjectURL(e.target.files[0])\n        })\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default TitleComponent;","import TitleComponent from './Title';\nexport default TitleComponent;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    position: absolute;\n    top: 1%;\n    left: 2%;\n    cursor: pointer;\n    color:black;\n    z-index:2;\n`\n\nclass BackButton extends React.Component {\n    render() {\n        const { to, text } = this.props;\n        return <Container>\n            <Link style={{\n                color: 'black',\n                textDecoration: 'none'\n            }} to={to}>\n                {text ? text : \"back\"}\n            </Link>\n        </Container>\n    }\n}\n\nexport default BackButton;","import BackButton from './BackButton';\nexport default BackButton","let uri = \"http://localhost\"\n\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n} else {\n    // production code\n    uri = \"https://www.rlog.link\"\n}\n\nexport default uri;","import React from 'react';\nimport styled from 'styled-components';\nimport EditorJs from '@editorjs/editorjs';\nimport Header from '@editorjs/header'\nimport Embed from '@editorjs/embed'\nimport ImageTool from '@editorjs/image'\nimport LinkTool from '@editorjs/link'\nimport TitleComponent from './title';\nimport BackButton from './backButton';\nimport dotenv from 'dotenv';\nimport { decodeToken } from 'utils/decodeToken'\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux';\nimport axios from 'axios'\nimport LoadingComponent from 'components/global/loadingComponent';\nimport uri from 'uri/uri'\nimport { client } from 'App';\n\ndotenv.config();\n\nlet counter = 0;\n\nlet uploadedImagesPublicIds = []\n\nlet editor\n\nconst destroyImageMutation = gql`\nmutation($publicId:String!) {\n    destroyImage(publicId:$publicId){\n      ok\n    }\n  }\n`\n\nconst addNewLogMutation = gql`\nmutation($title:String!, $userId:String!, $image:String, $time:String, $privateAsArgs:Boolean, $imagePublicId:String) {\n    addNewLog(title:$title, userId:$userId, image:$image, time:$time, privateAsArgs:$privateAsArgs, imagePublicId:$imagePublicId){\n      id \n      logData {\n        id\n      }\n    }\n  }\n`\n\nconst addBlock = gql`\nmutation($logId:String!,\n    $type:String,\n    $text:String,\n    $imageUrl:String,\n    $stretched:Boolean,\n    $caption:String,\n    $embed:String,\n    $height:Int,\n    $service:String,\n    $source:String,\n    $width:Int,\n    $level:Int,\n    $withBackground:Boolean,\n    $withBorder:Boolean,\n    $link:String, \n    $title :String,\n    $description :String,\n    $image :String,\n    $publicId:String\n    ) {\n    addBlock(link:$link, title:$title, description:$description, image:$image, publicId:$publicId,\n        logId:$logId,withBackground:$withBackground, withBorder:$withBorder ,type:$type, text:$text, imageUrl:$imageUrl, stretched:$stretched, caption:$caption, embed:$embed, height:$height, service:$service, source:$source, width:$width, level:$level){\n      id\n      type\n      logId\n      data {\n        text\n        file {\n          url\n        }\n      }\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    width:90%;\n`\n\nconst Editor = styled.div``\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: 100px;\n    left: 50px;\n    z-index:2;\n`\n\nconst TitleComponentContainer = styled.div`\n    display:flex;\n    align-items:flex-start;\n`\n\nconst Select = styled.select``\n\nclass PostNewLog extends React.Component {\n\n    state = {\n        loading: true,\n        title: \"\",\n        imageUrl: \"\",\n        imageFile: '',\n        file: null,\n        privateAsArgs: 'true',\n        uploading: false\n    }\n\n    async componentWillUnmount() {\n        uploadedImagesPublicIds.map(publicId => {\n            console.log('public id:', publicId)\n            client.mutate({\n                mutation: destroyImageMutation,\n                variables: {\n                    publicId\n                }\n            }).then(console.log)\n        })\n    }\n\n    componentDidMount() {\n        editor = new EditorJs({\n            holder: 'editorjs',\n            tools: {\n                linkTool: {\n                    class: LinkTool,\n                    config: {\n                        endpoint: uri + \":4000/api/fetchUrl\"\n                    }\n                },\n                header: {\n                    class: Header,\n                    inlineToolbar: ['link']\n                },\n                // list: {\n                //   class: List,\n                //   inlineToolbar: [\n                //     'link',\n                //     'bold',\n                //   ]\n                // },\n                embed: {\n                    class: Embed,\n                    inlineToolbar: false,\n                    config: {\n                        services: {\n                            youtube: true\n                        }\n                    }\n                },\n                image: {\n                    class: ImageTool,\n                    config: {\n                        uploader: {\n                            uploadByFile(file) {\n                                const formData = new FormData();\n                                formData.append('file', file);\n                                formData.append('upload_preset', 'ndp6lsvf');\n                                const xhr = new XMLHttpRequest();\n                                xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                xhr.send(formData);\n                                const imageResponse = JSON.parse(xhr.responseText);\n                                console.log('image response:', imageResponse)\n                                const data = {\n\n                                    publicId: imageResponse.public_id,\n                                    signature: imageResponse.signature\n                                }\n                                uploadedImagesPublicIds.push(imageResponse.public_id)\n                                return {\n                                    success: 1,\n                                    file: {\n                                        url: imageResponse.secure_url,\n                                        publicId: imageResponse.public_id\n                                    }\n                                }\n                            },\n                            uploadByUrl(url) {\n                                return fetch(url)\n                                    .then(res => res.blob())\n                                    .then(blob => {\n                                        blob.lastModifiedDate = new Date();\n                                        blob.name = 'imageFromUrl'\n                                        let file = blob\n                                        const formData = new FormData();\n                                        formData.append('file', file)\n                                        formData.append('upload_preset', 'ndp6lsvf')\n                                        const xhr = new XMLHttpRequest();\n                                        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                        xhr.send(formData);\n                                        const imageResponse = JSON.parse(xhr.responseText);\n                                        console.log('image response:', imageResponse)\n                                        uploadedImagesPublicIds.push(imageResponse.public_id)\n                                        return {\n                                            success: 1,\n                                            file: {\n                                                url: imageResponse.secure_url,\n                                                publicId: imageResponse.public_id\n                                            }\n                                        }\n                                    })\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { loading, imageFile, title, privateAsArgs, uploading } = this.state;\n        const { submitButtonClicked, handleInput, titleImageUploadButtonClicked, titleImageDeleteButtonClicked } = this;\n        if (loading) {\n            return \"loading....\"\n        } else {\n            return <Container>\n                <BackButton to={'/'} />\n\n                <TitleComponent privateAsArgs={privateAsArgs} titleImageDeleteButtonClicked={titleImageDeleteButtonClicked} titleImageUploadButtonClicked={titleImageUploadButtonClicked} imageFile={imageFile} title={title} handleInput={handleInput} />\n\n                <Editor id={'editorjs'} />\n                <Button onClick={submitButtonClicked}>Submit</Button>\n                {uploading && <LoadingComponent />}\n\n            </Container>\n        }\n\n    }\n\n    sleep(delay) {\n        let start = new window.Date().getTime();\n        while (new window.Date().getTime() < start + delay);\n    }\n\n    titleImageDeleteButtonClicked = () => {\n        this.setState({\n            imageFile: '',\n            file: null\n        })\n    }\n\n    titleImageUploadButtonClicked = e => {\n        console.log(URL.createObjectURL(e.target.files[0]))\n        this.setState({\n            imageFile: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0]\n        })\n        console.log('image file changed:', this.state.file)\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    requestToGraphqlServerInOrder = async (blockLength, blocks, logId) => {\n\n        console.log('here')\n        if (counter === blockLength) {\n            window.location.href = `/log/${logId}`;\n        } else {\n            const block = blocks[counter];\n            if (block.type === \"image\") {\n                const { url, publicId } = block.data.file;\n                console.log('public id:', publicId)\n                const { caption, stretched, withBackground, withBorder } = block.data;\n                const variables = {\n                    logId,\n                    type: \"image\",\n                    imageUrl: url,\n                    stretched,\n                    caption,\n                    withBackground,\n                    withBorder,\n                    publicId\n                }\n                // addBlock({\n                //     variables\n                // })\n\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"paragraph\") {\n                const { text } = block.data;\n                const variables = {\n                    logId,\n                    type: \"paragraph\",\n                    text\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"header\") {\n                const { text, level } = block.data;\n                const variables = {\n                    logId,\n                    type: \"header\",\n                    text,\n                    level\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"linkTool\") {\n                const { link } = block.data;\n                const { description, title } = block.data.meta;\n                const { url } = block.data.meta.image;\n                const variables = {\n                    logId,\n                    type: \"linkTool\",\n                    link,\n                    title,\n                    description,\n                    image: url\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n\n            } else if (block.type === 'embed') {\n                const { service, source, embed, caption, height, width } = block.data;\n                const variables = {\n                    logId,\n                    type: \"embed\",\n                    service,\n                    source,\n                    embed,\n                    caption,\n                    height,\n                    width\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            }\n        }\n    }\n\n    submitButtonClicked = () => {\n        this.setState({\n            uploading: true\n        })\n        const { title, file, privateAsArgs } = this.state;\n        if (title === null || title === \"\") {\n            alert('You need title');\n            return;\n        }\n        const time = new Date().getTime().toString();\n        const userId = decodeToken();\n        const { addNewLogMutation } = this.props;\n        const formData = new FormData();\n        console.log('file', file);\n        formData.append('file', file);\n        formData.append('upload_preset', 'ndp6lsvf')\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false)\n        xhr.send(formData);\n        const imageResponse = JSON.parse(xhr.responseText);\n        console.log('image response', imageResponse)\n        const imageUrl = imageResponse.secure_url\n        const variables = {\n            title,\n            userId,\n            image: imageUrl,\n            time,\n            privateAsArgs: privateAsArgs === 'true',\n            imagePublicId: imageResponse.public_id\n        }\n\n        addNewLogMutation({\n            variables\n        })\n            .then(res => {\n                const logId = res.data.addNewLog.id;\n                editor.save().then(outputData => {\n                    const blocks = outputData.blocks;\n                    console.log('outputdata:', outputData)\n                    const blockLength = blocks.length;\n\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId);\n\n                    // blocks.map(async block => {\n                    //     if (block.type === \"image\") {\n                    //         const { url, publicId } = block.data.file;\n                    //         console.log('public id:', publicId)\n                    //         const { caption, stretched, withBackground, withBorder } = block.data;\n                    //         const variables = {\n                    //             logId,\n                    //             type: \"image\",\n                    //             imageUrl: url,\n                    //             stretched,\n                    //             caption,\n                    //             withBackground,\n                    //             withBorder,\n                    //             publicId\n                    //         }\n                    //         await addBlock({\n                    //             variables\n                    //         })\n                    //         this.sleep(500);\n                    //     } else if (block.type === \"paragraph\") {\n                    //         const { text } = block.data;\n                    //         const variables = {\n                    //             logId,\n                    //             type: \"paragraph\",\n                    //             text\n                    //         }\n                    //         await addBlock({\n                    //             variables\n                    //         })\n                    //         this.sleep(500);\n                    //     } else if (block.type === \"header\") {\n                    //         const { text, level } = block.data;\n                    //         const variables = {\n                    //             logId,\n                    //             type: \"header\",\n                    //             text,\n                    //             level\n                    //         }\n                    //         await addBlock({\n                    //             variables\n                    //         })\n                    //         this.sleep(500);\n                    //     } else if (block.type === \"linkTool\") {\n                    //         const { link } = block.data;\n                    //         const { description, title } = block.data.meta;\n                    //         const { url } = block.data.meta.image;\n                    //         const variables = {\n                    //             logId,\n                    //             type: \"linkTool\",\n                    //             link,\n                    //             title,\n                    //             description,\n                    //             image: url\n                    //         }\n                    //         await addBlock({\n                    //             variables\n                    //         })\n                    //         this.sleep(500);\n\n                    //     } else if (block.type === 'embed') {\n                    //         const { service, source, embed, caption, height, width } = block.data;\n                    //         const variables = {\n                    //             logId,\n                    //             type: \"embed\",\n                    //             service,\n                    //             source,\n                    //             embed,\n                    //             caption,\n                    //             height,\n                    //             width\n                    //         }\n                    //         await addBlock({\n                    //             variables\n                    //         })\n                    //         this.sleep(500);\n                    //     }\n                    // })\n                    // window.location.href = \"/\"\n                    // window.location.href = `/log/${logId}`\n                })\n            })\n            .catch(err => console.error(err))\n\n\n        this.setState({\n            uploading: false\n        })\n        // window.location.href = `/log/${logId}`\n    }\n}\n\nexport default compose(\n    graphql(addNewLogMutation, { name: 'addNewLogMutation' }),\n    graphql(addBlock, { name: 'addBlock' })\n)(PostNewLog)\n\n\n\n\n","import PostNewLog from './postNewLog';\nexport default PostNewLog","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    min-height:20px;\n\n`\n\nconst YoutubeVideoContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst YoutubeVideo = styled.iframe`\n    width:100%;\n    height:100%;\n`\n\nconst Caption = styled.div`\nborder:1px solid gainsboro;\nborder-radius:4px;\nmargin-bottom:20px;\n`\n\nconst CaptionText = styled.div`\n    margin-left:20px;\n    margin-right:20px;\n    font-size:14px;\n`\n\nconst NormalText = styled.div`\n    font-size:15px;\n    margin-bottom:20px;\n    line-height: 1.8;\n    width:100%;\n`\n\nconst ImageContainer = styled.div`\n    /* max-width:80%; */\n    display:flex;\n    flex-direction:column;\n    /* align-items:center; */\n    \n`\n\nconst Image = styled.img`\n    max-width:100%;\n`\n\nconst HeaderContainer = styled.div`\n    margin-bottom:20px;\n    width:100%;\n`\n\nconst EmbedLinkContainer = styled.a`\n    /* width:650px; */\n    padding-left:20px;\n    padding-right:20px;\n    padding-top:30px;\n    padding-bottom:20px;\n    background:#fff;\n    border: 1px solid rgba(201, 201, 204, 0.48);\n    box-shadow: 0 1px 3px rgba(0,0,0, .1);\n    border-radius: 6px;\n    display:flex;\n    flex-direction:column;\n    align-items:flex-start;\n    position: relative;\n    text-decoration:none;\n    color:black;\n    margin-bottom:30px;\n`\n\nconst LinkTitle = styled.div`\n    font-size: 17px;\n    font-weight: 600;\n    line-height: 1.5em;\n    margin: 0 0 10px 0;\n`\n\nconst LinkDesc = styled.div`\n    margin: 0 0 20px 0;\n    font-size: 15px;\n    line-height: 1.55em;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    width:82%;\n    max-height:80px;\n`\n\nconst LinkImage = styled.img`\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin: 0 0 0 30px;\n    width: 65px;\n    height: 65px;\n    border-radius: 3px;\n    position:absolute;\n    top:30px;\n    right:30px;\n`\n\n\n\nclass Block extends React.Component {\n\n    render() {\n        const { block } = this.props;\n        const { replaceAll } = this;\n        return <Container>\n            {block.type === 'embed' && <>\n\n                <YoutubeVideo style={{\n                    width: block.data.width,\n                    height: block.data.height\n                }} src={block.data.embed} />\n                <Caption style={{\n                    width: block.data.width,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                }}>\n                    <CaptionText>\n                        {this.replaceAll(block.data.caption, \"&nbsp;\", \" \")}\n                    </CaptionText>\n                </Caption>\n\n            </>}\n            {(block.type === 'linkTool') && <>\n                <EmbedLinkContainer target={'_blank'} href={block.data.link}>\n                    <LinkTitle>\n                        {block.data.meta.title}\n                    </LinkTitle>\n                    <LinkDesc>\n                        {block.data.meta.description}\n                    </LinkDesc>\n                    {block.data.meta.image.url && <LinkImage src={block.data.meta.image.url} />}\n                </EmbedLinkContainer>\n            </>}\n            {block.type === 'paragraph' && <>\n                <NormalText>\n                    {/* {block.data.text} */}\n                    {this.replaceAll(block.data.text, \"&nbsp;\", \" \")}\n                </NormalText>\n            </>}\n            {block.type === 'image' && <>\n                <ImageContainer>\n                    <Image src={block.data.file.url} />\n                    <Caption style={{\n                        width: block.data.width,\n                        paddingTop: 10,\n                        paddingBottom: 10,\n                    }}>\n                        <CaptionText>\n                            {this.replaceAll(block.data.caption, \"&nbsp;\", \" \")}\n                        </CaptionText>\n                    </Caption>\n                </ImageContainer>\n            </>}\n            {block.type === 'header' && <>\n                <HeaderContainer>\n                    {block.data.level === 1 && <h1>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h1>}\n                    {block.data.level === 2 && <h2>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h2>}\n                    {block.data.level === 3 && <h3>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h3>}\n                    {block.data.level === 4 && <h4>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h4>}\n                    {block.data.level === 5 && <h5>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h5>}\n                    {block.data.level === 6 && <h6>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h6>}\n                </HeaderContainer>\n            </>}\n        </Container>\n    }\n\n    replaceAll = (str, searchStr, replaceStr) => {\n        return str.replace(new RegExp(searchStr, 'g'), replaceStr)\n    }\n}\n\nexport default Block","import BlockComponent from './Block';\nexport default BlockComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: fixed;\n    right:0;\n    height:100%;\n    background: rgb(244,243,247);\n    background: linear-gradient(90deg, white 0%, rgba(220,220,232,1) 55%, rgba(147,147,154,1) 100%);\n    padding-right:25px;\n    padding-left:25px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    opacity:0;\n    color:black;\n    &:hover {\n        opacity:0.9;\n    }\n    cursor: pointer;\n    transition:0.3s;\n`\n\nclass PreviousButton extends React.Component {\n    render() {\n        const { buttonClicked } = this\n        return <Container onClick={buttonClicked}>\n            previous\n</Container>\n\n\n    }\n\n    buttonClicked = () => {\n        const { id } = this.props;\n        window.location.href = `/log/${id}`\n    }\n}\n\nexport default PreviousButton;","import PreviousButton from './previousButton';\nexport default PreviousButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: fixed;\n    left:0;\n    height:100%;\n    width:61px;\n    background: rgb(244,243,247);\n    background: linear-gradient(270deg, white 0%, rgba(220,220,232,1) 55%, rgba(147,147,154,1) 100%);\n    padding-right:25px;\n    padding-left:25px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    opacity:0;\n    &:hover {\n        opacity:0.9;\n    }\n    cursor: pointer;\n    transition:0.3s;\n`\n\nclass NextButton extends React.Component {\n    render() {\n        const { buttonClicked } = this;\n        return <Container onClick={buttonClicked}>\n            next\n        </Container>\n    }\n    buttonClicked = () => {\n        const { id } = this.props;\n        window.location.href = `/log/${id}`\n    }\n}\n\nexport default NextButton;","import NextButton from './nextButton';\nexport default NextButton;","import React from 'react';\nimport styled from 'styled-components';\nimport { client } from 'App'\nimport { gql } from 'apollo-boost'\nimport { withRouter } from 'react-router-dom'\nimport BlockComponent from './block';\nimport BackButton from '../postNewLog/backButton';\nimport { decodeToken } from 'utils/decodeToken'\nimport PreviousButton from './previousButton';\nimport NextButton from './nextButton';\n\nconst getLog = gql`\nquery Log($id:ID!, $userId:String){\n    log(id:$id, userId:$userId) {\n      id,\n      previousLogId\n    nextLogId\n      title,\n      year,\n      month,\n      day,\n      image,\n      logData {\n        blocks {\n          id\n          type\n          data {\n            meta {\n                title\n                description\n                image {\n                    url\n                }\n            }\n            link,\n            text,\n            file {\n              url\n            },\n            stretched,\n            caption,\n            embed,\n            service,\n            source,\n            height,\n            width,\n            level,\n            withBorder,\n            withBackground\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst TitleContainer = styled.div`\n    width:50%;\n    height:200px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    position: relative;\n`\n\nconst Title = styled.div`\n    position:absolute;\n    color:${props => props.image ? 'white' : 'black'};\n    font-size:20px;\n    font-weight:700;\n`\n\nconst TitleImage = styled.img`\n    width:100%;\n    height:100%;\n    margin-top:10px;\n`\n\nconst Date = styled.div`\n    position:absolute;\n    right:6px;\n    bottom:0px;\ncolor:${props => props.image ? \"white\" : \"black\"};\n    font-size: 12px;\n    font-weight: 800;\n`\n\nconst BlocksContainer = styled.div`\n    width:50%;\n    margin-top:70px;\n`\n\n\nclass LogDetail extends React.Component {\n\n    state = {\n        loading: true,\n        log: {},\n        blocks: []\n    }\n\n    async componentDidMount() {\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const response = await client.query({\n            query: getLog,\n            variables: {\n                id: logId,\n                userId\n            }\n        })\n        console.log('response:', response)\n        const log = response.data.log;\n        if (log === null) {\n            alert(`You don't have authority to access`);\n            window.location.href = \"/\"\n        }\n        const blocks = response.data.log.logData.blocks;\n        this.setState({\n            loading: false,\n            log,\n            blocks\n        })\n\n    }\n\n\n    render() {\n        const { loading, log, blocks } = this.state;\n        if (loading) {\n            return <Container>Loading...</Container>\n        } else {\n            return <Container>\n                <BackButton to={'/'} text={'logs'} />\n                <TitleContainer>\n                    <Title image={log.image}>{log.title}</Title>\n                    {log.image && <TitleImage src={log.image} />}\n                    <Date image={log.image}>{log.day} {log.month} {log.year}</Date>\n                </TitleContainer>\n                <BlocksContainer>\n                    {blocks.map(block => {\n                        return <BlockComponent key={block.id} block={block} />\n                    })}\n                </BlocksContainer>\n                {log.previousLogId && <PreviousButton id={log.previousLogId} />}\n                {log.nextLogId && <NextButton id={log.nextLogId} />}\n\n            </Container>\n        }\n\n    }\n}\n\nexport default withRouter(LogDetail)","import LogDetail from './logDetail';\nexport default LogDetail","import React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost'\nimport { decodeToken } from 'utils/decodeToken';\nimport { client } from 'App';\nimport BackButton from '../postNewLog/backButton';\nimport TitleComponent from '../postNewLog/title';\nimport EditorJs from '@editorjs/editorjs';\nimport Header from '@editorjs/header'\nimport Embed from '@editorjs/embed'\nimport ImageTool from '@editorjs/image'\nimport LinkTool from '@editorjs/link'\nimport uri from 'uri/uri';\nimport LoadingComponent from 'components/global/loadingComponent';\n\nlet isPaused = false;\nlet counter = 0;\n\nlet editor\n\nlet uploadedImagesPublicIds = []\n\nconst addBlock = gql`\nmutation($logId:String!,\n    $type:String,\n    $text:String,\n    $imageUrl:String,\n    $stretched:Boolean,\n    $caption:String,\n    $embed:String,\n    $height:Int,\n    $service:String,\n    $source:String,\n    $width:Int,\n    $level:Int,\n    $withBackground:Boolean,\n    $withBorder:Boolean,\n    $link:String, \n    $title :String,\n    $description :String,\n    $image :String,\n    $publicId:String\n    ) {\n    addBlock(link:$link, title:$title, description:$description, image:$image, publicId:$publicId,\n        logId:$logId,withBackground:$withBackground, withBorder:$withBorder ,type:$type, text:$text, imageUrl:$imageUrl, stretched:$stretched, caption:$caption, embed:$embed, height:$height, service:$service, source:$source, width:$width, level:$level){\n      id\n      type\n      logId\n      data {\n        text\n        file {\n          url\n        }\n      }\n    }\n  }\n`\n\nconst deleteAllLogsFromLog = gql`\nmutation($logId:String!, $userId:String!) {\n    deleteAllBlocksFromLog(logId:$logId, userId:$userId){\n      id\n      title\n    }\n  }\n`\n\nconst changeLogImage = gql`\nmutation($id:String!, $newImage:String, $publicId:String) {\n    changeLogImage(id:$id, newImage:$newImage, publicId:$publicId){\n      id\n      image\n    }\n  }\n`\n\nconst changeLogTitle = gql`\nmutation($id:String!, $newTitle:String!, $privateAsArg:Boolean) {\n    changeLogTitle(id:$id, newTitle:$newTitle, privateAsArg:$privateAsArg) {\n      id\n      title\n    }\n  }\n`\n\nconst getLog = gql`\nquery Log($id:ID!, $userId:String){\n    log(id:$id, userId:$userId) {\n      id,\n      previousLogId,\n      private,\n      private2\n    nextLogId\n      title,\n      year,\n      month,\n      day,\n      image,\n      logData {\n        time\n        blocks {\n          id\n          type\n          data {\n            meta {\n                title\n                description\n                image {\n                    url\n                }\n            }\n            link,\n            text,\n            file {\n              url\n              publicId\n            },\n            stretched,\n            caption,\n            embed,\n            service,\n            source,\n            height,\n            width,\n            level,\n            withBorder,\n            withBackground\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n    /* display:flex;\n    flex-direction:column;\n    align-items:center; */\n    width:90%;\n`\n\nconst Editor = styled.div`\n    width:100%;\n`\n\n\nconst Date = styled.div`\n    position:absolute;\n    right:6px;\n    bottom:0px;\ncolor:${props => props.image ? \"white\" : \"black\"};\n    font-size: 12px;\n    font-weight: 800;\n`\nconst SubmitButton = styled.button`\n    position:fixed;\n    bottom:20px;\n    left:20px;\n    z-index: 3;\n`\n\n\nclass EditLogPage extends React.Component {\n\n    state = {\n        loading: true,\n        log: {},\n        logData: {},\n        privateAsArgs: true,\n        imageFile: '',\n        file: null,\n        title: \"\",\n        titleImageChanged: false,\n        uploading: false\n    }\n\n    async componentDidMount() {\n\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const response = await client.query({\n            query: getLog,\n            variables: {\n                id: logId,\n                userId\n            }\n        })\n        console.log('response:', response)\n        const log = response.data.log;\n        if (log === null) {\n            alert(`You don't have authority to access`);\n            window.location.href = \"/\"\n        }\n        const logData = response.data.log.logData;\n        console.log('logdata:', logData)\n        editor = new EditorJs({\n            holder: 'editorjs',\n            tools: {\n                linkTool: {\n                    class: LinkTool,\n                    config: {\n                        endpoint: uri + \":4000/api/fetchUrl\"\n                    }\n                },\n                header: {\n                    class: Header,\n                    inlineToolbar: ['link']\n                },\n                embed: {\n                    class: Embed,\n                    inlineToolbar: false,\n                    config: {\n                        services: {\n                            youtube: true\n                        }\n                    }\n                },\n\n                image: {\n                    class: ImageTool,\n                    config: {\n                        uploader: {\n                            uploadByFile(file) {\n                                const formData = new FormData();\n                                formData.append('file', file)\n                                formData.append('upload_preset', 'ndp6lsvf')\n                                const xhr = new XMLHttpRequest();\n                                xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                xhr.send(formData);\n                                const imageResponse = JSON.parse(xhr.responseText);\n                                console.log('image response: ', imageResponse);\n                                uploadedImagesPublicIds.push(imageResponse.public_id)\n                                return {\n                                    success: 1,\n                                    file: {\n                                        url: imageResponse.secure_url,\n                                        public_id: imageResponse.public_id\n                                    }\n                                }\n                            },\n                            uploadByUrl(url) {\n                                return fetch(url)\n                                    .then(res => res.blob())\n                                    .then(blob => {\n                                        blob.lastModifiedDate = new Date();\n                                        blob.name = \"imageFromUrl\"\n                                        let file = blob\n                                        const formData = new FormData();\n                                        formData.append('file', file);\n                                        formData.append('upload_preset', 'ndp6lsvf')\n                                        const xhr = new XMLHttpRequest();\n                                        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                        xhr.send(formData);\n                                        const imageResponse = JSON.parse(xhr.responseText);\n                                        console.log('image response:', imageResponse)\n                                        uploadedImagesPublicIds.push(imageResponse.public_id)\n                                        return {\n                                            success: 1,\n                                            file: {\n                                                url: imageResponse.secure_url,\n                                                publicId: imageResponse.public_id\n                                            }\n                                        }\n                                    })\n                            }\n                        }\n                    }\n                },\n\n            },\n            data: response.data.log.logData\n        })\n\n        console.log('private2:', response.data.log.private2)\n\n        this.setState({\n            loading: false,\n            log,\n            logData,\n            imageFile: response.data.log.image,\n            title: response.data.log.title,\n            privateAsArgs: response.data.log.private2\n\n        })\n    }\n    render() {\n        const { loading, log, privateAsArgs, imageFile, title, uploading } = this.state;\n        const { titleImageDeleteButtonClicked, titleImageUploadButtonClicked, handleInput, editButtonClicked } = this;\n        if (loading) {\n            return <Container>Loading....</Container>\n        } else {\n            return <Container>\n                <BackButton to={'/'} text={'logs'} />\n                <TitleComponent\n                    titleImageUploadButtonClicked={titleImageUploadButtonClicked}\n                    imageFile={imageFile}\n                    title={title}\n                    handleInput={handleInput}\n                    privateAsArgs={privateAsArgs}\n                    edit={true}\n                    titleImageDeleteButtonClicked={titleImageDeleteButtonClicked} />\n\n                <Editor id={'editorjs'} />\n                <SubmitButton onClick={editButtonClicked}>Edit</SubmitButton>\n                {uploading && <LoadingComponent />}\n            </Container>\n        }\n    }\n\n    requestToGraphqlServerInOrder = async (blockLength, blocks) => {\n        const { logId } = this.props.match.params;\n        if (counter === blockLength) {\n            this.setState({\n                uploading: false\n            })\n            window.location.href = `/log/${logId}`\n        } else {\n            const block = blocks[counter];\n            if (block.type === \"image\") {\n                const { url, public_id, publicId } = block.data.file;\n                console.log('block.data.file:', block.data.file);\n                console.log('public id', publicId)\n                let pbId = publicId;\n                console.log('public_id:', public_id)\n                console.log('publicId:', publicId)\n                console.log('pbId:', pbId)\n                if (pbId === null || pbId === undefined) {\n                    console.log('here')\n                    pbId = public_id\n                }\n                console.log('pbId:', pbId)\n                console.log('when you upload image:', block.data.file)\n                console.log(block.data)\n                const { caption, stretched, withBackground, withBorder } = block.data;\n                const variables = {\n                    logId,\n                    type: \"image\",\n                    imageUrl: url,\n                    stretched,\n                    caption,\n                    withBackground,\n                    withBorder,\n                    publicId: pbId\n                }\n                console.log('variables:', variables)\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"paragraph\") {\n                const { text } = block.data;\n                const variables = {\n                    logId,\n                    type: \"paragraph\",\n                    text\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"header\") {\n                const { text, level } = block.data;\n                const variables = {\n                    logId,\n                    type: \"header\",\n                    text,\n                    level\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"linkTool\") {\n                const { link } = block.data;\n                const { description, title } = block.data.meta;\n                const { url } = block.data.meta.image;\n                const variables = {\n                    logId,\n                    type: \"linkTool\",\n                    link,\n                    title,\n                    description,\n                    image: url\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n\n            } else if (block.type === 'embed') {\n                const { service, source, embed, caption, height, width } = block.data;\n                const variables = {\n                    logId,\n                    type: \"embed\",\n                    service,\n                    source,\n                    embed,\n                    caption,\n                    height,\n                    width\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n\n            }\n\n        }\n    }\n\n    editButtonClicked = async () => {\n        this.setState({\n            uploading: true\n        })\n        const { title, titleImageChanged, file, privateAsArgs } = this.state;\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const changeLogTitleResponse = await client.mutate({\n            mutation: changeLogTitle,\n            variables: {\n                id: logId,\n                newTitle: title,\n                privateAsArg: privateAsArgs === 'true'\n            }\n        }).then(() => {\n            // If log title changed\n            if (titleImageChanged) {\n\n                const formData = new FormData();\n                console.log('file', file)\n\n                formData.append('file', file);\n\n                fetch(uri + \":4000/api/image-to-cloudinary\", {\n                    method: 'POST',\n                    body: formData\n                }).then(res => {\n                    res.json().then(body => {\n                        const imageUrl = body.imageUrl;\n                        const imagePublicId = body.publicId;\n                        console.log('image url from server:', imageUrl);\n                        console.log('image public id from server:', imagePublicId)\n                        client.mutate({\n                            mutation: changeLogImage,\n                            variables: {\n                                id: logId,\n                                newImage: imageUrl,\n                                publicId: imagePublicId\n                            }\n                        }).then((result) => {\n                            console.log('change title image:', result);\n                            client.mutate({\n                                mutation: deleteAllLogsFromLog,\n                                variables: {\n                                    logId,\n                                    userId\n                                }\n                            }).then(() => {\n                                editor.save().then(outputData => {\n                                    console.log('outputdata:', outputData)\n                                    const blocks = outputData.blocks;\n                                    const blockLengths = blocks.length;\n\n                                    this.requestToGraphqlServerInOrder(blockLengths, blocks);\n\n                                })\n                            })\n                        })\n                    })\n\n\n\n                })\n\n\n\n            } else {\n                client.mutate({\n                    mutation: deleteAllLogsFromLog,\n                    variables: {\n                        logId,\n                        userId\n                    }\n                }).then(() => {\n                    editor.save().then(outputData => {\n                        console.log('outputdata:', outputData)\n                        const blocks = outputData.blocks;\n                        const blockLengths = blocks.length;\n\n                        this.requestToGraphqlServerInOrder(blockLengths, blocks);\n\n                    })\n                })\n            }\n\n\n\n\n        })\n\n        console.log('change log title response: ', changeLogTitleResponse)\n\n\n\n\n\n    }\n\n\n\n    waitForIt() {\n        if (isPaused) {\n            setTimeout(() => this.waitForIt(), 100)\n        }\n    }\n\n\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    titleImageUploadButtonClicked = e => {\n        console.log(URL.createObjectURL(e.target.files[0]))\n        console.log('file when file changed:', e.target.files[0]);\n        this.setState({\n            imageFile: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0],\n            titleImageChanged: true\n        })\n\n        console.log('file changed', this.state)\n    }\n\n    titleImageDeleteButtonClicked = () => {\n        this.setState({\n            imageFile: '',\n            file: null,\n            titleImageChanged: true\n        })\n        console.log('file:', this.state.file)\n    }\n}\n\nexport default EditLogPage","import EditLogPage from './editLogPage';\nexport default EditLogPage","import PrivateComponent from './PrivateComponent';\nexport default PrivateComponent","import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainComponent from './main';\nimport PostNewLog from './postNewLog';\nimport LogDetail from './logDetail';\nimport EditLogPage from './editLogPage';\n\nclass PrivateComponent extends React.Component {\n    render() {\n        return <Router>\n            <Switch>\n                <Route path={'/'} exact component={MainComponent} />\n                <Route path={'/post'} exact component={PostNewLog} />\n                <Route path={'/log/:logId'} exact component={LogDetail} />\n                <Route path={'/edit/log/:logId'} exact component={EditLogPage} />\n                <Route component={MainComponent} />\n            </Switch>\n        </Router>\n    }\n}\n\nexport default PrivateComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 130px;\n    user-select:none;\n`\n\nclass Copyright extends React.Component {\n    render() {\n        return <Container>\n            © 2019- shin donggyu All Rights Reserved\n        </Container>\n    }\n}\n\nexport default Copyright","import Copyright from './Copyright';\nexport default Copyright","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    height:7vh;\n    justify-content: flex-end;\n    z-index:1;\n    position: relative;\n`\n\nconst ButtonContainer = styled.div`\n    margin-right: 20px;\n    width: 166px;\n    display: flex;\n    justify-content: space-between;\n`\n\nconst SignInButton = styled.button`\n    border: 0;\n    font-size: 20px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    border-radius: 7px;\n    transition:0.7s;\n    background: white;\n    cursor: pointer;\n    &:hover {\n        color:white;\n        background:black;\n    }\n`\n\nconst SignUpButton = styled.button`\n    border: 0;\n    font-size: 20px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    border-radius: 7px;\n    transition:0.7s;\n    background: white;\n    cursor: pointer;\n    &:hover {\n        color:white;\n        background:black;\n    }\n`\n\nconst TitleLogo = styled.h1`\n    margin-left: 33px;\n    position: absolute;\n    left: 20px;\n    top: -2px;\n    cursor: pointer;\n    color:black;\n`\n\n\n\nclass NavigationBar extends React.Component {\n    render() {\n        return <Container>\n            <Link to={'/love-u'}>\n                <TitleLogo>R log</TitleLogo>\n            </Link>\n            <ButtonContainer>\n                <Link to={'/signin'}>\n                    <SignInButton>Sign In</SignInButton>\n                </Link>\n                <Link to={'/signup'}>\n                    <SignUpButton>Sign Up</SignUpButton>\n                </Link>\n            </ButtonContainer>\n        </Container>\n    }\n}\n\nexport default NavigationBar","import NavigationBar from './Navigation';\nexport default NavigationBar","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    height: 100vh;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nconst PhotoContainer = styled.div`\n    width:424px;\n    position: relative;\n    user-select:none;\n`\n\nconst Photo = styled.img`\n    width:100%;\n    border-radius: 7px;\n    user-select:none;\n`\n\nconst WhiteText = styled.div`\n    position:absolute;\n    top:0;\n    width:100%;\n    height:100%;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    color:white;\n    font-size: 32px;\n    text-shadow: 7px 5px 3px rgba(7,3,2,0.56);\n    user-select:none;\n`\n\nclass MyDoubleLucky extends React.Component {\n    render() {\n        return <Container>\n            <PhotoContainer>\n                <Photo src={require('../../../../assets/MyDoubleLucky.jpeg')} />\n                <WhiteText>\n                    Hello world!\n                </WhiteText>\n            </PhotoContainer>\n        </Container>\n    }\n}\n\nexport default MyDoubleLucky","import MyDoubleLucky from './MyDoubleLucky';\nexport default MyDoubleLucky","import React from 'react';\nimport styled from 'styled-components';\nimport Copyright from './copyright';\nimport NavigationBar from './navigation';\nimport MyDoubleLucky from './myDoubleLucky';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    min-height:100vh;\n    width:100%;\n    position: relative;\n`\n\n\nclass PublicMainComponent extends React.Component {\n    render() {\n        return <Container>\n            <NavigationBar />\n            <MyDoubleLucky />\n            <Copyright />\n        </Container>\n    }\n}\n\nexport default PublicMainComponent","import PublicMainComponent from './MainComponent';\nexport default PublicMainComponent;","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\nconst Row = styled.div`\n    display:flex;\n    width: 60%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    justify-content:space-between;\n`\n\nconst Label = styled.div``\n\nconst UnderLine = styled.input.attrs(props => ({\n    disabled: true\n}))`\n    width: 55%;\n    border: 0;\n    border-bottom: 1px solid black;\n    outline: none;\n    text-align: center;\n    font-size: 13px;\n    padding-bottom: 6px;\n    background: transparent;\n`\n\nclass LabelComponent extends React.Component {\n    render() {\n        const {\n            name,\n            password,\n            checkPassword,\n            phone,\n            email\n        } = this.props;\n        return <Container>\n            <Row>\n                <Label>name:</Label>\n                <UnderLine value={name} />\n            </Row>\n            <Row>\n                <Label>password:</Label>\n                <UnderLine type={'password'} value={password} />\n            </Row>\n            <Row>\n                <Label>check password:</Label>\n                <UnderLine type={'password'} value={checkPassword} />\n            </Row>\n            <Row>\n                <Label>phone:</Label>\n                <UnderLine value={phone} />\n            </Row>\n            <Row>\n                <Label>email:</Label>\n                <UnderLine value={email} />\n            </Row>\n        </Container>\n    }\n}\n\nLabelComponent.propTypes = {\n    name: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    checkPassword: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n}\n\nexport default LabelComponent","import LabelComponent from './Label';\nexport default LabelComponent","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst InputComponent = styled.input`\n    width: 50%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 20px;\n    border-radius: 4px;\n    border: 2px solid gainsboro;\n    outline: none;\n    padding-left:10px;\n`\n\nconst Button = styled.button`\n    position: absolute;\n    top: 79%;\n    border: 0;\n    color: white;\n    background: black;\n    border-radius: 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    font-size: 14px;\n    cursor: pointer;\n    z-index: 1;\n`\n\n\nclass FormComponent extends React.Component {\n    render() {\n        const {\n            name,\n            password,\n            checkPassword,\n            phone,\n            email,\n            handleInput,\n            submitButtonClicked\n        } = this.props;\n        return <Container>\n            <InputComponent placeholder={'e.g) shin donggyu'} name={'name'} onChange={handleInput} value={name} />\n            <InputComponent placeholder={'e.g) ************'} name={'password'} type={'password'} onChange={handleInput} value={password} />\n            <InputComponent placeholder={'e.g) ************'} name={'checkPassword'} type={'password'} onChange={handleInput} value={checkPassword} />\n            <InputComponent placeholder={'e.g) 01093201234'} name={'phone'} onChange={handleInput} value={phone} />\n            <InputComponent placeholder={'nyaconnected@gmail.com'} name={'email'} onChange={handleInput} value={email} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n\n}\n\nFormComponent.propTypes = {\n    name: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    checkPassword: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    handleInput: PropTypes.func.isRequired\n}\n\nexport default FormComponent","import FormComponent from './Form';\nexport default FormComponent","import React from 'react'\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport LabelComponent from './label';\nimport FormComponent from './form';\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst addNewUserMutation = gql`\nmutation($name:String!, $email:String!, $phone:String!, $password:String!) {\n    addNewUser(name:$name, email:$email, phone:$phone, password:$password) {\n      id\n      name\n      email\n      phone\n      verified\n    }\n  }\n`\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    min-height:100vh;\n`\nconst SignInComponentsContainer = styled.div`\n    height:93vh;\n    display:flex;\n`\n\n\n\n\nclass SignInComponent extends React.Component {\n    state = {\n        name: \"\",\n        password: \"\",\n        checkPassword: \"\",\n        phone: \"\",\n        email: \"\"\n    }\n    render() {\n        const { name, password, checkPassword, phone, email } = this.state;\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <NavigationBar />\n            <SignInComponentsContainer>\n                <LabelComponent\n                    name={name}\n                    password={password}\n                    checkPassword={checkPassword}\n                    phone={phone}\n                    email={email}\n                />\n                <FormComponent\n                    name={name}\n                    password={password}\n                    checkPassword={checkPassword}\n                    phone={phone}\n                    email={email}\n                    handleInput={handleInput}\n                    submitButtonClicked={submitButtonClicked}\n                />\n            </SignInComponentsContainer>\n            <Copyright />\n        </Container>\n    }\n\n    submitButtonClicked = () => {\n        const { name, email, password, checkPassword, phone } = this.state;\n        const { addNewUserMutation } = this.props;\n        if (name === \"\" || email === \"\" || password === \"\" || checkPassword === \"\" || phone === \"\") {\n            alert('Please fill every form.')\n            return;\n        }\n        const phoneLength = phone.length\n        if (phoneLength !== 11) {\n            alert('Please check your phone number again. ')\n            return;\n        }\n\n        if (password !== checkPassword) {\n            alert('Double check your password. ')\n            return\n        }\n\n        const variables = {\n            name,\n            email,\n            password,\n            phone\n        }\n\n        console.log('here1')\n\n        addNewUserMutation({\n            variables\n        }).then(res => {\n            console.log(res)\n            return res.data\n        })\n            .then(data => {\n                console.log(data)\n                return data.addNewUser\n            })\n            .then(user => {\n                const { id } = user;\n                window.location.href = `/verify/${id}`\n            })\n            .catch(err => {\n                console.error(err.message)\n                alert('Duplicated phone number or email.')\n            })\n\n        console.log('here2')\n\n        this.setState({\n            name: \"\",\n            password: \"\",\n            checkPassword: \"\",\n            phone: \"\",\n            email: \"\"\n        })\n\n    }\n\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default compose(\n    graphql(addNewUserMutation, { name: 'addNewUserMutation' })\n)(SignInComponent)","import SignInComponent from './SignIn'\nexport default SignInComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Row = styled.div`\n    display:flex;\n    width: 60%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    justify-content:space-between;\n`\n\nconst Label = styled.div``\n\nconst UnderLine = styled.input.attrs(props => ({\n    disabled: true\n}))`\n    width: 55%;\n    border: 0;\n    border-bottom: 1px solid black;\n    outline: none;\n    text-align: center;\n    font-size: 13px;\n    padding-bottom: 6px;\n    background: transparent;\n`\n\nclass LabelComponent extends React.Component {\n\n    render() {\n        const { email, password } = this.props;\n        return <Container>\n            <Row>\n                <Label>email:</Label>\n                <UnderLine value={email} />\n            </Row>\n            <Row>\n                <Label>password:</Label>\n                <UnderLine value={password} type={'password'} />\n            </Row>\n        </Container>\n    }\n}\n\nexport default LabelComponent","import LabelComponent from './Label';\nexport default LabelComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst InputComponent = styled.input`\n    width: 50%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 20px;\n    border-radius: 4px;\n    border: 2px solid gainsboro;\n    outline: none;\n    padding-left:10px;\n`\n\nconst Button = styled.button`\n    position: absolute;\n    top: 79%;\n    border: 0;\n    color: white;\n    background: black;\n    border-radius: 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    font-size: 14px;\n    cursor: pointer;\n    z-index:1;\n`\n\nclass FormComponent extends React.Component {\n    render() {\n        const {\n            handleInput,\n            email,\n            password,\n            submitButtonClicked\n        } = this.props;\n        return <Container>\n            <InputComponent onChange={handleInput} value={email} placeholder={'e.g) nyaconnected@gmail.com'} name={'email'} />\n            <InputComponent onChange={handleInput} type={'password'} value={password} placeholder={'e.g) ************'} name={'password'} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n}\n\nexport default FormComponent","import FormComponent from './Form';\nexport default FormComponent","import React from 'react';\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport LabelComponent from './label';\nimport FormComponent from './form';\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst loginMutation = gql`\nmutation($email:String!, $password:String!) {\n    login(email:$email, password:$password){\n      jwt\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    min-height:100vh;\n`\n\nconst LabelAndFormComponentsContainer = styled.div`\n    height:93vh;\n    display:flex;\n`\n\nclass SignUpComponent extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n    render() {\n        const { email, password } = this.state\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <NavigationBar />\n            <LabelAndFormComponentsContainer>\n                <LabelComponent email={email} password={password} />\n                <FormComponent submitButtonClicked={submitButtonClicked} handleInput={handleInput} email={email} password={password} />\n            </LabelAndFormComponentsContainer>\n            <Copyright />\n        </Container>\n    }\n\n    submitButtonClicked = () => {\n        const { email, password } = this.state;\n        const { loginMutation } = this.props;\n        const variables = {\n            email,\n            password\n        }\n        loginMutation({\n            variables\n        })\n            .then(res => res.data.login)\n            .then(result => {\n                console.log(result)\n                if (result.jwt === 'Not verified') {\n                    alert('Not verified account')\n                } else if (result.jwt === null) {\n                    alert('Check your email and password');\n\n                } else {\n                    localStorage.setItem('jwt', result.jwt)\n                    window.location.href = '/'\n                }\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default compose(\n    graphql(loginMutation, { name: 'loginMutation' })\n)(SignUpComponent)","import SignUpComponent from './signup';\nexport default SignUpComponent","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom'\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst allocateAuthKeyToUser = gql`\nmutation($userId:String!) {\n    allocateVerifyKeyToUser(userId:$userId) {\n      id\n      verifyKey\n    }\n  }\n`\n\nconst verifyUser = gql`\nmutation($userId:String!, $verifyKey:String!) {\n    verifyUser(userId:$userId, verifyKey:$verifyKey) {\n      verified\n      id\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    height:97vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Text = styled.div``\n\nconst Input = styled.input`\n    width: 16%;\n    text-align: center;\n    \n    border: 0;\n    border-bottom: 1px solid black;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-bottom: 10px;\n    font-size: 20px;\n    font-weight: 500;\n    outline: none;\n`\n\nconst Button = styled.button`\n    font-size:13px;\n`\n\nclass FormComponent extends React.Component {\n\n    state = {\n        verifyKey: \"\"\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params\n        const { allocateAuthKeyToUser } = this.props;\n        const variables = {\n            userId: id\n        }\n        allocateAuthKeyToUser({\n            variables\n        }).then(res => res.data)\n            .then(data => {\n                return\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n\n    render() {\n        const { verifyKey } = this.state;\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <Text>\n                We sent you the authentication key by the mobile message.\n            </Text>\n            <Text>\n                If you can't get message, please contact me, donggyu9410gmail.com\n            </Text>\n            <Input onChange={handleInput} value={verifyKey} name={'verifyKey'} placeholder={'e.g) 0629'} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    submitButtonClicked = () => {\n        const { verifyUser } = this.props;\n        const { id } = this.props.match.params\n        const { verifyKey } = this.state;\n        const variables = {\n            userId: id,\n            verifyKey\n        }\n        verifyUser({\n            variables\n        }).then(res => res.data)\n            .then(data => data.verifyUser)\n            .then(verifyUser => {\n                if (verifyUser.verified) {\n                    window.location.href = '/signin'\n                } else {\n                    alert('Fail to verify user. ')\n                }\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n}\n\nexport default withRouter(compose(\n    graphql(allocateAuthKeyToUser, { name: 'allocateAuthKeyToUser' }),\n    graphql(verifyUser, { name: 'verifyUser' })\n)(FormComponent))","import FormComponent from './Form';\nexport default FormComponent","import React from 'react'\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport FormComponent from './form';\n\nconst Container = styled.div``\n\nclass Verify extends React.Component {\n    render() {\n        return <Container>\n            <NavigationBar />\n            <FormComponent />\n            <Copyright />\n        </Container>\n    }\n\n\n}\n\nexport default Verify","import VerifyComponent from './Verify';\nexport default VerifyComponent","import PublicComponent from './PublicComponent';\nexport default PublicComponent","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport PublicMainComponent from './main';\nimport SignInComponent from './signin';\nimport SignUpComponent from './signup';\nimport VerifyComponent from './verify';\n\n\nclass PublicComponent extends React.Component {\n    render() {\n        return <Router>\n            <Switch>\n                <Route path={\"/\"} exact component={PublicMainComponent} />\n                <Route path={'/signin'} exact component={SignUpComponent} />\n                <Route path={'/signup'} exact component={SignInComponent} />\n                <Route path={'/verify/:id'} exact component={VerifyComponent} />\n                <Route component={PublicMainComponent} />\n            </Switch>\n        </Router>\n    }\n}\n\nexport default PublicComponent","import React from 'react';\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\nimport PrivateComponent from 'components/private';\nimport PublicComponent from 'components/public';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nlet uri = \"http://localhost:4000/graphql\"\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  // dev code\n} else {\n  // production code\n  uri = \"https://www.rlog.link:4000/graphql\"\n}\n\nexport const client = new ApolloClient({\n  uri\n})\n\nconst AlphaTestVersion = styled.div`\n  position:absolute;\n  top:5px;\n  left:5px;\n`\n\n\nconst Container = styled.div``\n\nclass AppContainer extends React.Component {\n  state = {\n    isLoggedIn: localStorage.getItem('jwt') === null ? false : true\n  }\n  render() {\n    const { isLoggedIn } = this.state\n    return <ApolloProvider client={client}>\n      <App isLoggedIn={isLoggedIn} />\n    </ApolloProvider>\n  }\n}\n\n\n\nfunction App(props) {\n  const { isLoggedIn } = props;\n  return (\n    <Container>\n      <AlphaTestVersion>\n        alpha test version.\n      </AlphaTestVersion>\n      {isLoggedIn ? <PrivateComponent /> : <PublicComponent />}\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}