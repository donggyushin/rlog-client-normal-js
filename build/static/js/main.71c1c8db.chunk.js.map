{"version":3,"sources":["assets/MyDoubleLucky.jpeg","components/private/main/logs/createNewLog/CreateNewLog.js","components/private/main/logs/createNewLog/index.js","utils/decodeToken.js","components/private/main/logs/log/Log.js","components/private/main/logs/log/index.js","components/global/Modal/Modal.js","components/global/Modal/index.js","components/global/loadingComponent.js","components/private/main/logs/Logs.js","components/private/main/logs/index.js","components/private/main/navigation/Navigation.js","components/private/main/navigation/index.js","uri/uri.js","components/private/main/changeProfile/changeProfile.js","components/private/main/changeProfile/index.js","components/private/main/Main.js","components/private/main/index.js","components/private/postNewLog/title/Title.js","components/private/postNewLog/title/index.js","components/private/postNewLog/backButton/BackButton.js","components/private/postNewLog/backButton/index.js","components/private/postNewLog/postNewLog.js","components/private/postNewLog/index.js","components/private/logDetail/block/Block.js","components/private/logDetail/block/index.js","components/private/logDetail/previousButton/previousButton.js","components/private/logDetail/previousButton/index.js","components/private/logDetail/nextButton/nextButton.js","components/private/logDetail/nextButton/index.js","components/private/logDetail/logDetail.js","components/private/logDetail/index.js","components/private/editLogPage/editLogPage.js","components/private/editLogPage/index.js","components/private/index.js","components/private/PrivateComponent.js","components/public/main/copyright/Copyright.js","components/public/main/copyright/index.js","components/public/main/navigation/Navigation.js","components/public/main/navigation/index.js","components/public/main/myDoubleLucky/MyDoubleLucky.js","components/public/main/myDoubleLucky/index.js","components/public/main/MainComponent.js","components/public/main/index.js","components/public/signin/label/Label.js","components/public/signin/label/index.js","components/public/signin/form/Form.js","components/public/signin/form/index.js","components/public/signin/SignIn.js","components/public/signin/index.js","components/public/signup/label/Label.js","components/public/signup/label/index.js","components/public/signup/form/Form.js","components/public/signup/form/index.js","components/public/signup/signup.js","components/public/signup/index.js","components/public/verify/form/Form.js","components/public/verify/form/index.js","components/public/verify/Verify.js","components/public/verify/index.js","components/public/index.js","components/public/PublicComponent.js","App.js","index.js"],"names":["module","exports","Container","styled","div","CreateNewLog","style","textDecoration","to","React","Component","decodeToken","token","localStorage","getItem","jwt","verify","id","BackgroundImage","img","Text","props","image","TrashIcon","i","EditIcon","PrivateIcon","Date","LogComponent","state","myId","LogComponentClicked","k","URLSearchParams","window","location","search","get","href","editIconClicked","e","stopPropagation","trashIconClicked","turnOnModalByClickingTrashIcon","logIdToDeleteFunc","console","log","this","setState","title","private2","year","month","day","userId","onClick","className","src","Box","Title","h2","Message","p","ButtonContainer","Button","button","ModalComponent","message","noButtonClicked","okayButtonClicked","LoadingComponent","type","color","height","width","getAllPublicLogs","gql","getAllPublicLogsLength","getMyLogsLength","deleteALog","getMyLogs","LogsComponent","logs","page","modal","modalTitle","modalMessage","logIdToDelete","loadingComponent","totalLogsLength","loading","currentLogsLength","trackScrolling","a","wrappedElement","document","getElementById","isBottom","client","query","variables","newPublicLogsResponse","newPublicLogs","data","newPublicLogsLength","length","newQueryResponse","newMyLogs","myLogs","newMyLogsLength","mutate","mutation","logId","response","updatedLogs","filter","removeEventListener","addEventListener","lengthData","allPublicLogs","map","index","key","el","parseInt","getBoundingClientRect","bottom","innerHeight","TitleText","NormalText","ProfilePhoto","NavigationBar","logoutButtonClicked","removeItem","profilePhoto","turnOnChangeProfileView","uri","updateUserImageProfileMutation","Card","FileInput","input","Photo","OkayButton","ChangeProfilePhoto","photoChanged","changePhotoImage","newPhotoFile","turnOffChangeProfileView","changeProfileImage","formData","FormData","append","fetch","method","body","then","res","json","profileImage","imageUrl","profileImagePublicId","publicId","result","updateUserProfileImage","profilePhotoPublicId","alert","inputChange","URL","createObjectURL","target","files","setWrapperRef","bind","handleClickOutside","node","wrapperRef","event","contains","ref","onChange","accept","getUserInfo","MainComponent","name","email","phone","changeProfileView","profileImageUrl","myParam","user","catch","err","error","TitleImageContainer","Select","select","TitleImage","file","ImageUploadButton","ImageUploadIcon","ImageDeleteIcon","TitleComponent","titleImage","TitleImageDeleteButtonClicked","titleImageDeleteButtonClicked","value","TitleImageUploadButtonClicked","handleInput","imageFile","titleImageUploadButtonClicked","edit","privateAsArgs","BackButton","text","dotenv","config","editor","counter","uploadedImagesPublicIds","destroyImageMutation","addNewLogMutation","addBlock","Editor","PostNewLog","uploading","requestToGraphqlServerInOrder","blockLength","blocks","block","url","caption","stretched","withBackground","withBorder","level","link","meta","description","service","source","embed","submitButtonClicked","time","getTime","toString","xhr","XMLHttpRequest","open","send","imageResponse","JSON","parse","responseText","secure_url","imagePublicId","public_id","addNewLog","save","outputData","EditorJs","holder","tools","linkTool","class","LinkTool","endpoint","header","Header","inlineToolbar","Embed","services","youtube","ImageTool","uploader","uploadByFile","signature","push","success","uploadByUrl","blob","lastModifiedDate","delay","start","compose","graphql","YoutubeVideo","iframe","Caption","CaptionText","ImageContainer","Image","HeaderContainer","EmbedLinkContainer","LinkTitle","LinkDesc","LinkImage","BlockComponent","replaceAll","str","searchStr","replaceStr","replace","RegExp","paddingTop","paddingBottom","PreviousButton","buttonClicked","NextButton","getLog","TitleContainer","BlocksContainer","LogDetail","urlParams","match","params","logData","previousLogId","nextLogId","withRouter","deleteAllLogsFromLog","changeLogImage","changeLogTitle","SubmitButton","EditLogPage","titleImageChanged","pbId","undefined","editButtonClicked","newTitle","privateAsArg","newImage","blockLengths","changeLogTitleResponse","PrivateComponent","path","exact","component","Copyright","SignInButton","SignUpButton","TitleLogo","h1","PhotoContainer","WhiteText","MyDoubleLucky","require","PublicMainComponent","Row","Label","UnderLine","attrs","disabled","LabelComponent","password","checkPassword","InputComponent","FormComponent","placeholder","addNewUserMutation","SignInComponentsContainer","SignInComponent","addNewUser","loginMutation","LabelAndFormComponentsContainer","SignUpComponent","login","setItem","allocateAuthKeyToUser","verifyUser","Input","verifyKey","verified","VerifyComponent","PublicComponent","ApolloClient","App","isLoggedIn","AppContainer","ReactDOM","render"],"mappings":"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","file":"static/js/main.71c1c8db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MyDoubleLucky.38372de1.jpeg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    width: 265px;\n    height: 204px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border-radius: 4px;\n    margin-left: 25px;\n    margin-right: 25px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    background:#dfe6e9;\n    box-shadow: 0px 0px 5px -1px rgba(0,0,0,0.63);\n    cursor: pointer;\n    transition:0.3s;\n    color:black;\n    \n    &:hover {\n        background:#f5f6fa;\n    }\n    text-decoration:none;\n`\n\nclass CreateNewLog extends React.Component {\n    render() {\n        return <Link style={{ textDecoration: 'none' }} to={'/post'}>\n            <Container>\n                create new log\n        </Container>\n        </Link>\n    }\n}\n\nexport default CreateNewLog","import CreateNewLog from './CreateNewLog';\nexport default CreateNewLog","import jwt from 'jsonwebtoken';\n\nexport const decodeToken = () => {\n    const token = localStorage.getItem('jwt')\n    const decoded = jwt.verify(token, 'rlog')\n    return decoded.id\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { decodeToken } from 'utils/decodeToken';\n\n\nconst Container = styled.div`\noverflow:hidden;\nposition: relative;\nwidth: 265px;\nheight: 204px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nborder-radius: 4px;\nmargin-left: 25px;\nmargin-right: 25px;\nmargin-top: 20px;\nmargin-bottom: 20px;\nbackground:#dfe6e9;\nbox-shadow: 0px 0px 5px -1px rgba(0,0,0,0.63);\ncursor: pointer;\ntransition:0.3s;\ncolor:black;\n&:hover {\n    background:#f5f6fa;\n}\ntext-decoration:none;\n`\nconst BackgroundImage = styled.img`\n    object-fit:cover;\n    width:100%;\n    height:100%;\n    ${Container}:hover & {\n        opacity:0.7;\n    }  \n`\n\nconst Text = styled.div`\n    max-width: 80%;\n    font-weight:600;\n    position: absolute;\n    color:${props => props.image ? 'white' : 'black'};\n`\n\nconst TrashIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    top:10px;\n    left:10px;\n    opacity:0;\n    ${Container}:hover & {\n        opacity:1;\n        z-index:3;\n    }\n`\n\nconst EditIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    top:10px;\n    left:36px;\n    opacity:0;\n    ${Container}:hover & {\n        opacity:1;\n        z-index:3;\n    }\n`\n\nconst PrivateIcon = styled.i`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    bottom:10px;\n    left:10px;\n    z-index:1;\n    \n`\n\nconst Date = styled.div`\n    color:${props => props.image ? \"white\" : \"black\"};\n    position:absolute;\n    bottom:10px;\n    right:10px;\n    /* z-index:2; */\n    font-size:11px;\n`\n\n\nclass LogComponent extends React.Component {\n\n    state = {\n        myId: \"\"\n    }\n\n    componentDidMount() {\n        this.setState({\n            myId: decodeToken()\n        })\n    }\n\n\n    render() {\n        const { title, image, private2, year, month, day, userId } = this.props;\n        const { myId } = this.state;\n        const { trashIconClicked, LogComponentClicked, editIconClicked } = this;\n\n        return <Container onClick={LogComponentClicked}>\n            {myId === userId && <TrashIcon image={image} onClick={trashIconClicked} className={'fas fa-trash-alt'} />}\n            {myId === userId && <EditIcon onClick={editIconClicked} image={image} className={'far fa-edit'} />}\n\n            <Date image={image}>{day} {month} {year}</Date>\n            {private2 && <PrivateIcon image={image} className={'fas fa-lock'} />}\n            {image && <BackgroundImage src={image} />}\n            <Text image={image}>{title}</Text>\n\n        </Container>\n\n    }\n\n    LogComponentClicked = () => {\n        const { id } = this.props;\n        const urlParams = new URLSearchParams(window.location.search);\n        const k = urlParams.get('k');\n        if (k) {\n            window.location.href = `/log/${id}?k=${k}`\n        } else {\n            window.location.href = `/log/${id}`\n        }\n\n    }\n\n    editIconClicked = e => {\n        e.stopPropagation();\n        const { id } = this.props;\n        window.location.href = `/edit/log/${id}`\n    }\n\n    trashIconClicked = (e) => {\n        e.stopPropagation();\n        const { id, turnOnModalByClickingTrashIcon, logIdToDeleteFunc } = this.props;\n        turnOnModalByClickingTrashIcon()\n        logIdToDeleteFunc(id)\n        console.log(`${id} trash icon clicked!`)\n\n    }\n\n}\n\nexport default LogComponent","import LogComponent from './Log';\nexport default LogComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.5);\n    color:white;\n    display:flex;\n    justify-content:center;\n`\n\nconst Box = styled.div`\n    margin-top:50px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    color:black;\n    width: 40%;\n    height: 40%;\n    background: white;\n    border-radius: 2px;\n    position: relative;\n`\n\nconst Title = styled.h2``\n\nconst Message = styled.p`\n    width: 80%;\n`\n\nconst ButtonContainer = styled.div`\n    display:flex;\n    position:absolute;\n    bottom:20px;\n`\n\nconst Button = styled.button`\n    background: white;\n    border: 0;\n    font-size: 16px;\n    cursor: pointer;\n    margin-right: 10px;\n`\n\nclass ModalComponent extends React.Component {\n    render() {\n        const { title, message, noButtonClicked, okayButtonClicked } = this.props;\n        return <Container>\n            <Box>\n                <Title>\n                    {title}\n                </Title>\n                <Message>\n                    {message}\n                </Message>\n                <ButtonContainer>\n                    <Button onClick={okayButtonClicked}>Okay</Button>\n                    <Button onClick={noButtonClicked}>No</Button>\n                </ButtonContainer>\n            </Box>\n        </Container>\n    }\n}\n\nexport default ModalComponent;","import ModalComponent from './Modal';\nexport default ModalComponent;","import React from 'react'\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner'\n\nconst Container = styled.div`\n    position:fixed;\n    z-index:10;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    background:rgba(0,0,0,0.5);\n`\n\nconst LoadingComponent = () => <Container>\n    <Loader\n        type=\"Audio\"\n        color=\"#d63031\"\n        height={100}\n        width={100}\n    // timeout={3000} //3 secs\n\n    />\n</Container>\n\nexport default LoadingComponent","import React from 'react';\nimport styled from 'styled-components';\nimport CreateNewLog from './createNewLog';\nimport LogComponent from './log';\nimport { client } from 'App'\nimport { gql } from 'apollo-boost';\nimport { decodeToken } from 'utils/decodeToken';\nimport ModalComponent from 'components/global/Modal';\nimport LoadingComponent from 'components/global/loadingComponent';\n\nconst getAllPublicLogs = gql`\n  query($page:Int!){\n    getAllPublicLogs(page:$page){\n        id\n        title\n        image\n        private2\n        year\n        month\n        day\n        userId\n    }\n  }\n`\n\nconst getAllPublicLogsLength = gql`\n  {\n    getAllPublicLogsLength{\n      length\n    }\n  }\n`\n\nconst getMyLogsLength = gql`\nquery($userId:String!){\n  getMyLogsLength(userId:$userId) {\n      length\n    }\n  }\n`\n\nconst deleteALog = gql`\nmutation($logId:String!, $userId:String!) {\n    deleteALogV2(logId:$logId,userId:$userId) {\n      id\n      title\n    }\n  }\n`\n\nconst getMyLogs = gql`\nquery MyLogs(\n    $userId:String!,\n    $page:Int!\n){\n    myLogs(userId:$userId,page:$page) {\n      id\n      title\n      image\n      private2\n      year\n      month\n      day\n      userId\n    }\n  }\n`\n\nconst Container = styled.div`\n    /* width:80%;\n    display:flex; */\n    width: 88%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    flex-wrap: wrap;\n    /* min-width: 1267px; */\n\n`\n\nclass LogsComponent extends React.Component {\n    state = {\n        logs: [],\n        page: 1,\n        modal: false,\n        modalTitle: \"\",\n        modalMessage: \"\",\n        logIdToDelete: \"\",\n        loadingComponent: false,\n        totalLogsLength: 0,\n        loading: true,\n        currentLogsLength: 0,\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('scroll', this.trackScrolling);\n    }\n\n    async componentDidMount() {\n\n        // To detect users scrolls to bottom of div with React js\n        document.addEventListener('scroll', this.trackScrolling);\n\n        const { k } = this.props;\n        if (k === 'public') {\n            // Get all logs except for private logs\n\n            // Get all public data length from server; \n            const lengthData = await client.query({\n                query: getAllPublicLogsLength\n            })\n            const totalLogsLength = lengthData.data.getAllPublicLogsLength.length;\n            const { page } = this.state;\n            // get all pulblic logs by 50\n            const response = await client.query({\n                query: getAllPublicLogs,\n                variables: {\n                    page\n                }\n            })\n            const allPublicLogs = response.data.getAllPublicLogs;\n            const currentLogsLength = response.data.getAllPublicLogs.length;\n\n            console.log('all public logs: ', allPublicLogs)\n            this.setState({\n                logs: allPublicLogs,\n                page: this.state.page + 1,\n                totalLogsLength,\n                loading: false,\n                currentLogsLength\n            })\n        } else {\n            const userId = decodeToken();\n\n            const lengthData = await client.query({\n                query: getMyLogsLength,\n                variables: {\n                    userId\n                }\n            })\n            const totalLogsLength = lengthData.data.getMyLogsLength.length\n            const { page } = this.state;\n            const response = await client.query({\n                query: getMyLogs,\n                variables: {\n                    userId,\n                    page\n                }\n            })\n            const myLogs = response.data.myLogs;\n            const currentLogsLength = response.data.myLogs.length;\n            this.setState({\n                logs: myLogs,\n                page: this.state.page + 1,\n                totalLogsLength,\n                loading: false,\n                currentLogsLength\n            })\n        }\n\n\n\n\n    }\n\n    render() {\n        const { logs, modal, modalMessage, modalTitle, loadingComponent, loading } = this.state;\n        const { turnOnModalByClickingTrashIcon, okayButtonClicked, noButtonClicked, logIdToDeleteFunc } = this;\n        const { k } = this.props;\n        if (loading) {\n            return \"Loading....\"\n        } else {\n            return <Container id={'logsContainer'}>\n                {k !== 'public' && <CreateNewLog />}\n\n                {logs.map((log, index) => {\n                    const { id, title, image, private2, year, month, day, userId } = log;\n\n                    return <LogComponent userId={userId} year={year} month={month} day={day} private2={private2} logIdToDeleteFunc={logIdToDeleteFunc} turnOnModalByClickingTrashIcon={turnOnModalByClickingTrashIcon} key={id} id={id} title={title} image={image} />\n                })}\n                {loadingComponent && <LoadingComponent />}\n                {modal && <ModalComponent okayButtonClicked={okayButtonClicked} noButtonClicked={noButtonClicked} title={modalTitle} message={modalMessage} />}\n            </Container>\n        }\n    }\n\n    isBottom(el) {\n\n        return parseInt(el.getBoundingClientRect().bottom) <= window.innerHeight;\n    }\n\n    trackScrolling = async () => {\n        const wrappedElement = document.getElementById('logsContainer');\n        const { page, currentLogsLength, totalLogsLength } = this.state;\n        const { k } = this.props;\n\n        const userId = decodeToken();\n\n        if (this.isBottom(wrappedElement)) {\n            // I have to check there left more logs in database\n            // I have to know how many logs now I have right now,\n\n            // then I have to know how many logs I have in my server\n            // Only procceed when there left more logs than I get right now.\n            if (currentLogsLength < totalLogsLength) {\n\n                if (k === 'public') {\n                    console.log('logs container bottom reached in public logs');\n                    const newPublicLogsResponse = await client.query({\n                        query: getAllPublicLogs,\n                        variables: {\n                            page\n                        }\n                    })\n                    const newPublicLogs = newPublicLogsResponse.data.getAllPublicLogs;\n                    const newPublicLogsLength = newPublicLogs.length;\n                    this.setState({\n                        logs: [\n                            ...this.state.logs,\n                            newPublicLogs\n                        ],\n                        page: this.state.page + 1,\n                        currentLogsLength: this.state.currentLogsLength + newPublicLogsLength\n                    })\n                } else {\n\n                    console.log('logs container bottom reached in private logs');\n                    const newQueryResponse = await client.query({\n                        query: getMyLogs,\n                        variables: {\n                            userId,\n                            page\n                        }\n                    })\n                    const newMyLogs = newQueryResponse.data.myLogs;\n                    const newMyLogsLength = newQueryResponse.data.myLogs.length;\n                    this.setState({\n                        logs: [\n                            ...this.state.logs,\n                            newMyLogs\n                        ],\n                        page: this.state.page + 1,\n                        currentLogsLength: this.state.currentLogsLength + newMyLogsLength\n                    })\n                }\n\n\n\n            }\n\n        }\n    }\n\n    turnOnModalByClickingTrashIcon = () => {\n        this.setState({\n            modal: true,\n            modalTitle: \"Caution\",\n            modalMessage: \"If you delete this log, you will never retrieve this log. Are you sure delete this log?\"\n        })\n    }\n\n    okayButtonClicked = async () => {\n        console.log('okay button clicked!')\n        this.setState({\n            loadingComponent: true\n        })\n        const { logIdToDelete } = this.state;\n        const userId = decodeToken();\n        const response = await client.mutate({\n            mutation: deleteALog,\n            variables: {\n                logId: logIdToDelete,\n                userId\n            }\n        })\n\n        const updatedLogs = this.state.logs.filter(log => log.id !== logIdToDelete)\n        this.setState({\n            logs: updatedLogs\n        })\n\n\n        console.log('response: ', response)\n        this.setState({\n            loadingComponent: false,\n            modal: false,\n            modalTitle: \"\",\n            modalMessage: \"\"\n        })\n    }\n\n    noButtonClicked = () => {\n        console.log('no button clicked!')\n        this.setState({\n            modal: false,\n            modalTitle: \"\",\n            modalMessage: \"\"\n        })\n    }\n\n    logIdToDeleteFunc = (logId) => {\n        this.setState({\n            logIdToDelete: logId\n        })\n    }\n\n}\n\nexport default LogsComponent","import LogsComponent from './Logs';\nexport default LogsComponent","import React from 'react'\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    width: 90%;\n    height: 6vh;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`\n\nconst TitleText = styled.div`\n    font-size: 21px;\n    font-weight: 200;\n    cursor: pointer;\n`\n\nconst NormalText = styled.div`\n    cursor: pointer;\n    color:black;\n`\n\nconst ProfilePhoto = styled.img`\n    height:40px;\n    width:40px;\n    border-radius:50%;\n    position:absolute;\n    top:9px;\n    right:10px;\n    cursor: pointer;\n`\n\nclass Navigation extends React.Component {\n\n    state = {\n        k: 'private'\n    }\n\n    componentDidMount() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const k = urlParams.get('k');\n        if (k) {\n            this.setState({\n                k\n            })\n        }\n    }\n\n    render() {\n        const { logoutButtonClicked } = this;\n        const { k } = this.state;\n        const { profilePhoto, turnOnChangeProfileView } = this.props;\n        return <Container>\n            <a style={{\n                textDecoration: 'none',\n                color: 'black'\n            }} href={'/'}>\n                <TitleText>R log</TitleText>\n            </a>\n\n            {k === 'private' ? <a style={{\n                textDecoration: 'none',\n            }} href={'/?k=public'}>\n                <NormalText>\n                    public\n            </NormalText>\n            </a> : <a style={{\n                textDecoration: 'none',\n            }} href={'/'}>\n                    <NormalText>\n                        private\n            </NormalText>\n                </a>}\n\n            <NormalText onClick={logoutButtonClicked}>\n                logout\n            </NormalText>\n            <ProfilePhoto onClick={turnOnChangeProfileView} src={profilePhoto ? profilePhoto : 'https://images-na.ssl-images-amazon.com/images/I/91M76Va0YSL._SL1500_.jpg'} />\n        </Container>\n    }\n\n    logoutButtonClicked = () => {\n        localStorage.removeItem('jwt')\n        window.location.href = '/'\n    }\n}\n\nexport default Navigation","import NavigationBar from './Navigation'\nexport default NavigationBar","let uri = \"http://localhost\"\n\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n} else {\n    // production code\n    uri = \"https://www.rlog.link\"\n}\n\nexport default uri;","import React from 'react';\nimport styled from 'styled-components';\nimport uri from 'uri/uri';\nimport gql from 'graphql-tag';\nimport { client } from 'App';\nimport { decodeToken } from 'utils/decodeToken';\nimport { getUserInfo } from '../Main';\nimport LoadingComponent from 'components/global/loadingComponent';\n\nconst updateUserImageProfileMutation = gql`\nmutation($id:ID!, $profileImage:String, $profileImagePublicId:String) {\n    updateUserProfileImage(id:$id, profileImage:$profileImage, profileImagePublicId:$profileImagePublicId) {\n      id\n      profilePhoto\n      profilePhotoPublicId\n    }\n  }\n`\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.75);\n    color:white;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Card = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    position: relative;\n`\n\nconst FileInput = styled.input`\n    position: absolute;\n    height: 250px;\n    opacity: 0;\n    cursor: pointer;\n    z-index: 4;\n\n`\n\nconst Photo = styled.img`\n    width:250px;\n    height:250px;\n    border-radius:50%;\n    background:transparent;\n    object-fit:cover;\n    z-index:3;\n`\n\nconst OkayButton = styled.button`\n    background: white;\n    border: 0;\n    font-size: 20px;\n    cursor: pointer;\n    outline: none;\n    margin-top: 22px;\n`\n\nclass ChangeProfilePhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    /**\n     * Set the wrapper ref\n     */\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    /**\n     * Alert if clicked on outside of element\n     */\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            const { turnOffChangeProfileView } = this.props;\n            console.log('you clicked outside of card!')\n            turnOffChangeProfileView()\n        }\n    }\n\n    state = {\n        photoChanged: false,\n        changePhotoImage: \"\",\n        newPhotoFile: null,\n        loading: false\n    }\n\n    render() {\n        const { profilePhoto } = this.props;\n        const { inputChange, okayButtonClicked } = this;\n        const { photoChanged, changePhotoImage, loading } = this.state;\n        return <Container>\n            <Card ref={this.setWrapperRef}>\n                <FileInput onChange={inputChange} type={'file'} accept=\"image/*\" />\n                {photoChanged ? <Photo src={changePhotoImage} /> : <Photo src={profilePhoto ? profilePhoto : 'https://images-na.ssl-images-amazon.com/images/I/91M76Va0YSL._SL1500_.jpg'} />}\n                {/* <Photo src={profilePhoto ? profilePhoto : 'https://images-na.ssl-images-amazon.com/images/I/91M76Va0YSL._SL1500_.jpg'} /> */}\n                <OkayButton onClick={okayButtonClicked}>Okay</OkayButton>\n            </Card>\n            {loading && <LoadingComponent />}\n        </Container>\n    }\n\n    okayButtonClicked = () => {\n        this.setState({\n            loading: true\n        })\n        const { newPhotoFile, photoChanged } = this.state;\n        const { turnOffChangeProfileView, changeProfileImage } = this.props;\n        if (photoChanged === false) {\n            alert('You need to choose a new picture')\n            return;\n        }\n        const formData = new FormData();\n        formData.append('file', newPhotoFile);\n        console.log('new photo file: ', newPhotoFile);\n        fetch(uri + \":4000/api/image-to-cloudinary\", {\n            method: 'POST',\n            body: formData\n        }).then(res => {\n            res.json().then(body => {\n                const profileImage = body.imageUrl;\n                const profileImagePublicId = body.publicId;\n                const id = decodeToken();\n\n                const variables = {\n                    id,\n                    profileImage,\n                    profileImagePublicId\n                }\n                client.mutate({\n                    mutation: updateUserImageProfileMutation,\n                    variables\n                    // refetchQueries: [{\n                    //     query: getUserInfo,\n                    //     variables: {\n                    //         id\n                    //     }\n                    // }]\n                }).then(result => {\n\n                    console.log(\"update user profile image result: \", result)\n                    const { data: { updateUserProfileImage: { profilePhoto, profilePhotoPublicId } } } = result;\n                    console.log('profilePhoto:', profilePhoto);\n                    console.log('profilePhotoPublicId:', profilePhotoPublicId);\n                    changeProfileImage(profilePhoto)\n                    turnOffChangeProfileView()\n                })\n            })\n        })\n    }\n\n    inputChange = e => {\n        this.setState({\n            photoChanged: true,\n            changePhotoImage: URL.createObjectURL(e.target.files[0]),\n            newPhotoFile: e.target.files[0]\n        })\n    }\n}\n\nexport default ChangeProfilePhoto","import ChangeProfilePhoto from './changeProfile';\nexport default ChangeProfilePhoto","import React from 'react';\nimport styled from 'styled-components';\nimport LogsComponent from './logs';\nimport NavigationBar from './navigation';\nimport { gql } from 'apollo-boost'\nimport { client } from 'App';\nimport { decodeToken } from 'utils/decodeToken';\nimport ChangeProfilePhoto from './changeProfile';\n\nexport const getUserInfo = gql`\nquery($id:ID!){\n    user(id:$id) {\n      name\n      email\n      phone\n      profilePhoto\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    width:100%;\n    min-height:100vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nclass MainComponent extends React.Component {\n\n\n\n    componentDidMount() {\n\n        const urlParams = new URLSearchParams(window.location.search);\n        const myParam = urlParams.get('k');\n\n        if (myParam) {\n            this.setState({\n                k: myParam\n            })\n        }\n\n        const userId = decodeToken();\n        client.query({\n            query: getUserInfo,\n            variables: {\n                id: userId\n            }\n        }).then(result => {\n            const user = result.data.user;\n            const { email, name, phone, profilePhoto } = user;\n            this.setState({\n                email,\n                name,\n                phone,\n                profilePhoto,\n                loading: false\n            })\n        }).catch(err => console.error(err))\n    }\n\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        profilePhoto: \"\",\n        changeProfileView: false,\n        k: \"\",\n        loading: true\n    }\n\n    render() {\n        const { profilePhoto, changeProfileView, k, loading } = this.state;\n        const { turnOnChangeProfileView, turnOffChangeProfileView, changeProfileImage } = this;\n        return <Container>\n            {loading ? 'loading... ' : <>\n\n                <NavigationBar turnOnChangeProfileView={turnOnChangeProfileView} profilePhoto={profilePhoto} />\n                <LogsComponent k={k} />\n                {changeProfileView && <ChangeProfilePhoto changeProfileImage={changeProfileImage} turnOffChangeProfileView={turnOffChangeProfileView} profilePhoto={profilePhoto} />}\n            </>}\n        </Container>\n    }\n\n    changeProfileImage = profileImageUrl => {\n        this.setState({\n            profilePhoto: profileImageUrl\n        })\n    }\n\n    turnOffChangeProfileView = () => {\n        this.setState({\n            changeProfileView: false\n        })\n    }\n\n    turnOnChangeProfileView = () => {\n        this.setState({\n            changeProfileView: true\n        })\n    }\n}\n\nexport default MainComponent","import MainComponent from './Main';\nexport default MainComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst TitleImageContainer = styled.div`\n    width:50%;\n    position: relative;\n    height:200px;\n    overflow:hidden;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    margin-top:10px;\n`\n\nconst Select = styled.select`\n    border: 0;\n    background: white;\n    outline:none;\n`\n\nconst TitleImage = styled.img`\n    width: 100%;\n    height: 100%;\n    border-radius: 3px;\n`\n\nconst Title = styled.input`\n    color:${props => props.file ? 'white' : 'black'};\n    position: absolute;\n    border: 0;\n    font-size: 20px;\n    text-align: center;\n    border-bottom: ${props => props.file ? '0px' : '1px solid black'};\n    width: 48%;\n    padding-bottom: 10px;\n    outline:none;\n    background: transparent;\n\n`\n\nconst ImageUploadButton = styled.input`\n    position: absolute;\n    top: 12px;\n    left: 19px;\n    width: 20px;\n    height: 20px;\n    opacity: 0;\n    z-index:2;\n    cursor: pointer;\n`\n\nconst ImageUploadIcon = styled.i`\n    color: ${props => props.file ? 'white' : 'black'};\n    font-size: 20px;\n    position: absolute;\n    top: 12px;\n    left: 20px;\n    cursor: pointer;\n`\n\nconst ImageDeleteIcon = styled.i`\n    color: white;\n    font-size: 15px;\n    position: absolute;\n    top: 41px;\n    left: 22px;\n    -webkit-transform: skew(45deg,-45deg);\n    -ms-transform: skew(45deg,-45deg);\n    transform: skew(45deg,-45deg);\n    cursor: pointer;\n`\n\nclass TitleComponent extends React.Component {\n    state = {\n        title: \"\",\n        titleImage: null,\n        file: null\n    }\n    render() {\n        // const { title, titleImage, file } = this.state;\n        const { title, imageFile, handleInput, edit, titleImageUploadButtonClicked, privateAsArgs } = this.props;\n        const { TitleImageDeleteButtonClicked } = this;\n        return <Container>\n            <TitleImageContainer>\n                {imageFile && <TitleImage src={imageFile} />}\n                <Title file={imageFile} onChange={handleInput} name={'title'} value={title} />\n                {/* {edit !== true && <ImageUploadButton id={'ImageUploadButton'} onChange={titleImageUploadButtonClicked} accept=\"image/*\" type={'file'} />}\n                {edit !== true && <ImageUploadIcon file={imageFile} className={'fas fa-plus'} />}\n\n                {(imageFile && edit !== true) && <ImageDeleteIcon onClick={TitleImageDeleteButtonClicked} className={'fas fa-plus'} />} */}\n                <ImageUploadButton id={'ImageUploadButton'} onChange={titleImageUploadButtonClicked} accept=\"image/*\" type={'file'} />\n                <ImageUploadIcon file={imageFile} className={'fas fa-plus'} />\n                {imageFile && <ImageDeleteIcon onClick={TitleImageDeleteButtonClicked} className={'fas fa-plus'} />}\n            </TitleImageContainer>\n            <Select onChange={handleInput} value={privateAsArgs} name={'privateAsArgs'}>\n                <option value={true}>private</option>\n                <option value={false}>public</option>\n            </Select>\n        </Container>\n    }\n\n    TitleImageDeleteButtonClicked = () => {\n        const { titleImageDeleteButtonClicked } = this.props;\n        titleImageDeleteButtonClicked();\n        document.getElementById(\"ImageUploadButton\").value = \"\";\n    }\n\n    TitleImageUploadButtonClicked = e => {\n        this.setState({\n            file: URL.createObjectURL(e.target.files[0])\n        })\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default TitleComponent;","import TitleComponent from './Title';\nexport default TitleComponent;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    position: absolute;\n    top: 1%;\n    left: 2%;\n    cursor: pointer;\n    color:black;\n    z-index:2;\n`\n\nclass BackButton extends React.Component {\n    render() {\n        const { to, text } = this.props;\n        return <Container>\n            <Link style={{\n                color: 'black',\n                textDecoration: 'none'\n            }} to={to}>\n                {text ? text : \"back\"}\n            </Link>\n        </Container>\n    }\n}\n\nexport default BackButton;","import BackButton from './BackButton';\nexport default BackButton","import React from 'react';\nimport styled from 'styled-components';\nimport EditorJs from '@editorjs/editorjs';\nimport Header from '@editorjs/header'\nimport Embed from '@editorjs/embed'\nimport ImageTool from '@editorjs/image'\nimport LinkTool from '@editorjs/link'\nimport TitleComponent from './title';\nimport BackButton from './backButton';\nimport dotenv from 'dotenv';\nimport { decodeToken } from 'utils/decodeToken'\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux';\nimport axios from 'axios'\nimport LoadingComponent from 'components/global/loadingComponent';\nimport uri from 'uri/uri'\nimport { client } from 'App';\n\ndotenv.config();\n\nlet counter = 0;\n\nlet uploadedImagesPublicIds = []\n\nlet editor\n\nconst destroyImageMutation = gql`\nmutation($publicId:String!) {\n    destroyImage(publicId:$publicId){\n      ok\n    }\n  }\n`\n\nconst addNewLogMutation = gql`\nmutation($title:String!, $userId:String!, $image:String, $time:String, $privateAsArgs:Boolean, $imagePublicId:String) {\n    addNewLog(title:$title, userId:$userId, image:$image, time:$time, privateAsArgs:$privateAsArgs, imagePublicId:$imagePublicId){\n      id \n      logData {\n        id\n      }\n    }\n  }\n`\n\nconst addBlock = gql`\nmutation($logId:String!,\n    $type:String,\n    $text:String,\n    $imageUrl:String,\n    $stretched:Boolean,\n    $caption:String,\n    $embed:String,\n    $height:Int,\n    $service:String,\n    $source:String,\n    $width:Int,\n    $level:Int,\n    $withBackground:Boolean,\n    $withBorder:Boolean,\n    $link:String, \n    $title :String,\n    $description :String,\n    $image :String,\n    $publicId:String\n    ) {\n    addBlock(link:$link, title:$title, description:$description, image:$image, publicId:$publicId,\n        logId:$logId,withBackground:$withBackground, withBorder:$withBorder ,type:$type, text:$text, imageUrl:$imageUrl, stretched:$stretched, caption:$caption, embed:$embed, height:$height, service:$service, source:$source, width:$width, level:$level){\n      id\n      type\n      logId\n      data {\n        text\n        file {\n          url\n        }\n      }\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    width:90%;\n`\n\nconst Editor = styled.div``\n\nconst Button = styled.button`\n    position: fixed;\n    bottom: 100px;\n    left: 50px;\n    z-index:2;\n`\n\nconst TitleComponentContainer = styled.div`\n    display:flex;\n    align-items:flex-start;\n`\n\nconst Select = styled.select``\n\nclass PostNewLog extends React.Component {\n\n    state = {\n        loading: true,\n        title: \"\",\n        imageUrl: \"\",\n        imageFile: '',\n        file: null,\n        privateAsArgs: 'true',\n        uploading: false\n    }\n\n    async componentWillUnmount() {\n        uploadedImagesPublicIds.map(publicId => {\n            console.log('public id:', publicId)\n            client.mutate({\n                mutation: destroyImageMutation,\n                variables: {\n                    publicId\n                }\n            }).then(console.log)\n        })\n    }\n\n    componentDidMount() {\n        editor = new EditorJs({\n            holder: 'editorjs',\n            tools: {\n                linkTool: {\n                    class: LinkTool,\n                    config: {\n                        endpoint: uri + \":4000/api/fetchUrl\"\n                    }\n                },\n                header: {\n                    class: Header,\n                    inlineToolbar: ['link']\n                },\n                // list: {\n                //   class: List,\n                //   inlineToolbar: [\n                //     'link',\n                //     'bold',\n                //   ]\n                // },\n                embed: {\n                    class: Embed,\n                    inlineToolbar: false,\n                    config: {\n                        services: {\n                            youtube: true\n                        }\n                    }\n                },\n                image: {\n                    class: ImageTool,\n                    config: {\n                        uploader: {\n                            uploadByFile(file) {\n                                const formData = new FormData();\n                                formData.append('file', file);\n\n                                // fetch(uri + \":4000/api/image-to-cloudinary\", {\n                                //     method:'POST',\n                                //     body: formData\n                                // }).then(res => {\n                                //     res.json().then(body => {\n\n                                //     })\n                                // })\n                                formData.append('upload_preset', 'ndp6lsvf');\n                                const xhr = new XMLHttpRequest();\n                                xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                xhr.send(formData);\n                                const imageResponse = JSON.parse(xhr.responseText);\n                                console.log('image response:', imageResponse)\n                                const data = {\n\n                                    publicId: imageResponse.public_id,\n                                    signature: imageResponse.signature\n                                }\n                                uploadedImagesPublicIds.push(imageResponse.public_id)\n                                return {\n                                    success: 1,\n                                    file: {\n                                        url: imageResponse.secure_url,\n                                        publicId: imageResponse.public_id\n                                    }\n                                }\n                            },\n                            uploadByUrl(url) {\n                                return fetch(url)\n                                    .then(res => res.blob())\n                                    .then(blob => {\n                                        blob.lastModifiedDate = new Date();\n                                        blob.name = 'imageFromUrl'\n                                        let file = blob\n                                        const formData = new FormData();\n                                        formData.append('file', file)\n                                        formData.append('upload_preset', 'ndp6lsvf')\n                                        const xhr = new XMLHttpRequest();\n                                        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                        xhr.send(formData);\n                                        const imageResponse = JSON.parse(xhr.responseText);\n                                        console.log('image response:', imageResponse)\n                                        uploadedImagesPublicIds.push(imageResponse.public_id)\n                                        return {\n                                            success: 1,\n                                            file: {\n                                                url: imageResponse.secure_url,\n                                                publicId: imageResponse.public_id\n                                            }\n                                        }\n                                    })\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        const { loading, imageFile, title, privateAsArgs, uploading } = this.state;\n        const { submitButtonClicked, handleInput, titleImageUploadButtonClicked, titleImageDeleteButtonClicked } = this;\n        if (loading) {\n            return \"loading....\"\n        } else {\n            return <Container>\n                <BackButton to={'/'} />\n\n                <TitleComponent privateAsArgs={privateAsArgs} titleImageDeleteButtonClicked={titleImageDeleteButtonClicked} titleImageUploadButtonClicked={titleImageUploadButtonClicked} imageFile={imageFile} title={title} handleInput={handleInput} />\n\n                <Editor id={'editorjs'} />\n                <Button onClick={submitButtonClicked}>Submit</Button>\n                {uploading && <LoadingComponent />}\n\n            </Container>\n        }\n\n    }\n\n    sleep(delay) {\n        let start = new window.Date().getTime();\n        while (new window.Date().getTime() < start + delay);\n    }\n\n    titleImageDeleteButtonClicked = () => {\n        this.setState({\n            imageFile: '',\n            file: null\n        })\n    }\n\n    titleImageUploadButtonClicked = e => {\n        console.log(URL.createObjectURL(e.target.files[0]))\n        this.setState({\n            imageFile: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0]\n        })\n        console.log('image file changed:', this.state.file)\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    requestToGraphqlServerInOrder = async (blockLength, blocks, logId) => {\n\n        console.log('here')\n        if (counter === blockLength) {\n            window.location.href = `/log/${logId}`;\n        } else {\n            const block = blocks[counter];\n            if (block.type === \"image\") {\n                const { url, publicId } = block.data.file;\n                console.log('public id:', publicId)\n                const { caption, stretched, withBackground, withBorder } = block.data;\n                const variables = {\n                    logId,\n                    type: \"image\",\n                    imageUrl: url,\n                    stretched,\n                    caption,\n                    withBackground,\n                    withBorder,\n                    publicId\n                }\n                // addBlock({\n                //     variables\n                // })\n\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"paragraph\") {\n                const { text } = block.data;\n                const variables = {\n                    logId,\n                    type: \"paragraph\",\n                    text\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"header\") {\n                const { text, level } = block.data;\n                const variables = {\n                    logId,\n                    type: \"header\",\n                    text,\n                    level\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            } else if (block.type === \"linkTool\") {\n                const { link } = block.data;\n                const { description, title } = block.data.meta;\n                const { url } = block.data.meta.image;\n                const variables = {\n                    logId,\n                    type: \"linkTool\",\n                    link,\n                    title,\n                    description,\n                    image: url\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n\n            } else if (block.type === 'embed') {\n                const { service, source, embed, caption, height, width } = block.data;\n                const variables = {\n                    logId,\n                    type: \"embed\",\n                    service,\n                    source,\n                    embed,\n                    caption,\n                    height,\n                    width\n                }\n                client.mutate({\n                    mutation: addBlock,\n                    variables\n                }).then(res => {\n                    counter += 1;\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId)\n                })\n\n            }\n        }\n    }\n\n    submitButtonClicked = () => {\n\n        const { title, file, privateAsArgs } = this.state;\n        this.setState({\n            uploading: true\n        })\n        if (title === null || title === \"\") {\n            alert('You need title');\n            return;\n        }\n        const time = new Date().getTime().toString();\n        const userId = decodeToken();\n        const { addNewLogMutation } = this.props;\n        const formData = new FormData();\n        console.log('file', file);\n        formData.append('file', file);\n        formData.append('upload_preset', 'ndp6lsvf')\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false)\n        xhr.send(formData);\n        const imageResponse = JSON.parse(xhr.responseText);\n        console.log('image response', imageResponse)\n        const imageUrl = imageResponse.secure_url\n        const variables = {\n            title,\n            userId,\n            image: imageUrl,\n            time,\n            privateAsArgs: privateAsArgs === 'true',\n            imagePublicId: imageResponse.public_id\n        }\n\n        addNewLogMutation({\n            variables\n        })\n            .then(res => {\n                const logId = res.data.addNewLog.id;\n                editor.save().then(outputData => {\n                    const blocks = outputData.blocks;\n                    console.log('outputdata:', outputData)\n                    const blockLength = blocks.length;\n\n                    this.requestToGraphqlServerInOrder(blockLength, blocks, logId);\n\n\n                })\n            })\n            .catch(err => console.error(err))\n\n\n    }\n}\n\nexport default compose(\n    graphql(addNewLogMutation, { name: 'addNewLogMutation' }),\n    graphql(addBlock, { name: 'addBlock' })\n)(PostNewLog)\n\n\n\n\n","import PostNewLog from './postNewLog';\nexport default PostNewLog","import React from 'react'\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    min-height:20px;\n\n`\n\nconst YoutubeVideoContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst YoutubeVideo = styled.iframe`\n    width:100%;\n    height:100%;\n`\n\nconst Caption = styled.div`\nborder:1px solid gainsboro;\nborder-radius:4px;\nmargin-bottom:20px;\n`\n\nconst CaptionText = styled.div`\n    margin-left:20px;\n    margin-right:20px;\n    font-size:14px;\n`\n\nconst NormalText = styled.div`\n    font-size:15px;\n    margin-bottom:20px;\n    line-height: 1.8;\n    width:100%;\n`\n\nconst ImageContainer = styled.div`\n    /* max-width:80%; */\n    display:flex;\n    flex-direction:column;\n    /* align-items:center; */\n    \n`\n\nconst Image = styled.img`\n    max-width:100%;\n`\n\nconst HeaderContainer = styled.div`\n    margin-bottom:20px;\n    width:100%;\n`\n\nconst EmbedLinkContainer = styled.a`\n    /* width:650px; */\n    padding-left:20px;\n    padding-right:20px;\n    padding-top:30px;\n    padding-bottom:20px;\n    background:#fff;\n    border: 1px solid rgba(201, 201, 204, 0.48);\n    box-shadow: 0 1px 3px rgba(0,0,0, .1);\n    border-radius: 6px;\n    display:flex;\n    flex-direction:column;\n    align-items:flex-start;\n    position: relative;\n    text-decoration:none;\n    color:black;\n    margin-bottom:30px;\n`\n\nconst LinkTitle = styled.div`\n    font-size: 17px;\n    font-weight: 600;\n    line-height: 1.5em;\n    max-width:80%;\n    margin: 0 0 10px 0;\n`\n\nconst LinkDesc = styled.div`\n    margin: 0 0 20px 0;\n    font-size: 15px;\n    line-height: 1.55em;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    width:82%;\n    max-height:80px;\n`\n\nconst LinkImage = styled.img`\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    margin: 0 0 0 30px;\n    width: 65px;\n    height: 65px;\n    border-radius: 3px;\n    position:absolute;\n    top:30px;\n    right:30px;\n`\n\n\n\nclass Block extends React.Component {\n\n    render() {\n        const { block } = this.props;\n        const { replaceAll } = this;\n        return <Container>\n            {block.type === 'embed' && <>\n\n                <YoutubeVideo style={{\n                    width: block.data.width,\n                    height: block.data.height\n                }} src={block.data.embed} />\n                <Caption style={{\n                    width: block.data.width,\n                    paddingTop: 10,\n                    paddingBottom: 10,\n                }}>\n                    <CaptionText>\n                        {this.replaceAll(block.data.caption, \"&nbsp;\", \" \")}\n                    </CaptionText>\n                </Caption>\n\n            </>}\n            {(block.type === 'linkTool') && <>\n                <EmbedLinkContainer target={'_blank'} href={block.data.link}>\n                    <LinkTitle>\n                        {block.data.meta.title}\n                    </LinkTitle>\n                    <LinkDesc>\n                        {block.data.meta.description}\n                    </LinkDesc>\n                    {block.data.meta.image.url && <LinkImage src={block.data.meta.image.url} />}\n                </EmbedLinkContainer>\n            </>}\n            {block.type === 'paragraph' && <>\n                <NormalText>\n                    {/* {block.data.text} */}\n                    {this.replaceAll(block.data.text, \"&nbsp;\", \" \")}\n                </NormalText>\n            </>}\n            {block.type === 'image' && <>\n                <ImageContainer>\n                    <Image src={block.data.file.url} />\n                    <Caption style={{\n                        width: block.data.width,\n                        paddingTop: 10,\n                        paddingBottom: 10,\n                    }}>\n                        <CaptionText>\n                            {this.replaceAll(block.data.caption, \"&nbsp;\", \" \")}\n                        </CaptionText>\n                    </Caption>\n                </ImageContainer>\n            </>}\n            {block.type === 'header' && <>\n                <HeaderContainer>\n                    {block.data.level === 1 && <h1>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h1>}\n                    {block.data.level === 2 && <h2>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h2>}\n                    {block.data.level === 3 && <h3>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h3>}\n                    {block.data.level === 4 && <h4>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h4>}\n                    {block.data.level === 5 && <h5>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h5>}\n                    {block.data.level === 6 && <h6>{this.replaceAll(block.data.text, \"&nbsp;\", \" \")}</h6>}\n                </HeaderContainer>\n            </>}\n        </Container>\n    }\n\n    replaceAll = (str, searchStr, replaceStr) => {\n        return str.replace(new RegExp(searchStr, 'g'), replaceStr)\n    }\n}\n\nexport default Block","import BlockComponent from './Block';\nexport default BlockComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: fixed;\n    right:0;\n    height:100%;\n    background: rgb(244,243,247);\n    background: linear-gradient(90deg, white 0%, rgba(220,220,232,1) 55%, rgba(147,147,154,1) 100%);\n    padding-right:25px;\n    padding-left:25px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    opacity:0;\n    color:black;\n    &:hover {\n        opacity:0.9;\n    }\n    cursor: pointer;\n    transition:0.3s;\n`\n\nclass PreviousButton extends React.Component {\n    render() {\n        const { buttonClicked } = this\n        return <Container onClick={buttonClicked}>\n            previous\n</Container>\n\n\n    }\n\n    buttonClicked = () => {\n        const { id } = this.props;\n        window.location.href = `/log/${id}`\n    }\n}\n\nexport default PreviousButton;","import PreviousButton from './previousButton';\nexport default PreviousButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: fixed;\n    left:0;\n    height:100%;\n    width:61px;\n    background: rgb(244,243,247);\n    background: linear-gradient(270deg, white 0%, rgba(220,220,232,1) 55%, rgba(147,147,154,1) 100%);\n    padding-right:25px;\n    padding-left:25px;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    opacity:0;\n    &:hover {\n        opacity:0.9;\n    }\n    cursor: pointer;\n    transition:0.3s;\n`\n\nclass NextButton extends React.Component {\n    render() {\n        const { buttonClicked } = this;\n        return <Container onClick={buttonClicked}>\n            next\n        </Container>\n    }\n    buttonClicked = () => {\n        const { id } = this.props;\n        window.location.href = `/log/${id}`\n    }\n}\n\nexport default NextButton;","import NextButton from './nextButton';\nexport default NextButton;","import React from 'react';\nimport styled from 'styled-components';\nimport { client } from 'App'\nimport { gql } from 'apollo-boost'\nimport { withRouter } from 'react-router-dom'\nimport BlockComponent from './block';\nimport BackButton from '../postNewLog/backButton';\nimport { decodeToken } from 'utils/decodeToken'\nimport PreviousButton from './previousButton';\nimport NextButton from './nextButton';\n\nconst getLog = gql`\nquery Log($id:ID!, $userId:String){\n    log(id:$id, userId:$userId) {\n      id,\n      previousLogId\n    nextLogId\n      title,\n      year,\n      month,\n      day,\n      image,\n      logData {\n        blocks {\n          id\n          type\n          data {\n            meta {\n                title\n                description\n                image {\n                    url\n                }\n            }\n            link,\n            text,\n            file {\n              url\n            },\n            stretched,\n            caption,\n            embed,\n            service,\n            source,\n            height,\n            width,\n            level,\n            withBorder,\n            withBackground\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst TitleContainer = styled.div`\n    width:50%;\n    height:200px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    position: relative;\n`\n\nconst Title = styled.div`\n    position:absolute;\n    color:${props => props.image ? 'white' : 'black'};\n    font-size:20px;\n    font-weight:700;\n`\n\nconst TitleImage = styled.img`\n    width:100%;\n    height:100%;\n    margin-top:10px;\n`\n\nconst Date = styled.div`\n    position:absolute;\n    right:6px;\n    bottom:0px;\ncolor:${props => props.image ? \"white\" : \"black\"};\n    font-size: 12px;\n    font-weight: 800;\n`\n\nconst BlocksContainer = styled.div`\n    width:50%;\n    margin-top:70px;\n`\n\n\nclass LogDetail extends React.Component {\n\n    state = {\n        loading: true,\n        log: {},\n        blocks: [],\n        k: 'private'\n    }\n\n    async componentDidMount() {\n\n        const urlParams = new URLSearchParams(window.location.search);\n        const k = urlParams.get('k');\n        if (k) {\n            this.setState({\n                k\n            })\n\n        }\n\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const response = await client.query({\n            query: getLog,\n            variables: {\n                id: logId,\n                userId\n            }\n        })\n        console.log('response:', response)\n        const log = response.data.log;\n        if (log === null) {\n            alert(`You don't have authority to access`);\n            window.location.href = \"/\"\n        }\n        const blocks = response.data.log.logData.blocks;\n        this.setState({\n            loading: false,\n            log,\n            blocks\n        })\n\n    }\n\n\n    render() {\n        const { loading, log, blocks, k } = this.state;\n        if (loading) {\n            return <Container>Loading...</Container>\n        } else {\n            return <Container>\n                <BackButton to={k === 'public' ? `/?k=public` : \"/\"} text={'logs'} />\n                <TitleContainer>\n                    <Title image={log.image}>{log.title}</Title>\n                    {log.image && <TitleImage src={log.image} />}\n                    <Date image={log.image}>{log.day} {log.month} {log.year}</Date>\n                </TitleContainer>\n                <BlocksContainer>\n                    {blocks.map(block => {\n                        return <BlockComponent key={block.id} block={block} />\n                    })}\n                </BlocksContainer>\n                {k === 'private' && <>\n                    {log.previousLogId && <PreviousButton id={log.previousLogId} />}\n                    {log.nextLogId && <NextButton id={log.nextLogId} />}\n                </>}\n\n            </Container>\n        }\n\n    }\n}\n\nexport default withRouter(LogDetail)","import LogDetail from './logDetail';\nexport default LogDetail","import React from 'react';\nimport styled from 'styled-components';\nimport { gql } from 'apollo-boost'\nimport { decodeToken } from 'utils/decodeToken';\nimport { client } from 'App';\nimport BackButton from '../postNewLog/backButton';\nimport TitleComponent from '../postNewLog/title';\nimport EditorJs from '@editorjs/editorjs';\nimport Header from '@editorjs/header'\nimport Embed from '@editorjs/embed'\nimport ImageTool from '@editorjs/image'\nimport LinkTool from '@editorjs/link'\nimport uri from 'uri/uri';\nimport LoadingComponent from 'components/global/loadingComponent';\n\nlet isPaused = false;\nlet counter = 0;\n\nlet editor\n\nlet uploadedImagesPublicIds = []\n\nconst addBlock = gql`\nmutation($logId:String!,\n    $type:String,\n    $text:String,\n    $imageUrl:String,\n    $stretched:Boolean,\n    $caption:String,\n    $embed:String,\n    $height:Int,\n    $service:String,\n    $source:String,\n    $width:Int,\n    $level:Int,\n    $withBackground:Boolean,\n    $withBorder:Boolean,\n    $link:String, \n    $title :String,\n    $description :String,\n    $image :String,\n    $publicId:String\n    ) {\n    addBlock(link:$link, title:$title, description:$description, image:$image, publicId:$publicId,\n        logId:$logId,withBackground:$withBackground, withBorder:$withBorder ,type:$type, text:$text, imageUrl:$imageUrl, stretched:$stretched, caption:$caption, embed:$embed, height:$height, service:$service, source:$source, width:$width, level:$level){\n      id\n      type\n      logId\n      data {\n        text\n        file {\n          url\n        }\n      }\n    }\n  }\n`\n\nconst deleteAllLogsFromLog = gql`\nmutation($logId:String!, $userId:String!) {\n    deleteAllBlocksFromLog(logId:$logId, userId:$userId){\n      id\n      title\n    }\n  }\n`\n\nconst changeLogImage = gql`\nmutation($id:String!, $newImage:String, $publicId:String) {\n    changeLogImage(id:$id, newImage:$newImage, publicId:$publicId){\n      id\n      image\n    }\n  }\n`\n\nconst changeLogTitle = gql`\nmutation($id:String!, $newTitle:String!, $privateAsArg:Boolean) {\n    changeLogTitle(id:$id, newTitle:$newTitle, privateAsArg:$privateAsArg) {\n      id\n      title\n    }\n  }\n`\n\nconst getLog = gql`\nquery Log($id:ID!, $userId:String){\n    log(id:$id, userId:$userId) {\n      id,\n      previousLogId,\n      private,\n      private2\n    nextLogId\n      title,\n      year,\n      month,\n      day,\n      image,\n      logData {\n        time\n        blocks {\n          id\n          type\n          data {\n            meta {\n                title\n                description\n                image {\n                    url\n                }\n            }\n            link,\n            text,\n            file {\n              url\n              publicId\n            },\n            stretched,\n            caption,\n            embed,\n            service,\n            source,\n            height,\n            width,\n            level,\n            withBorder,\n            withBackground\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Container = styled.div`\n    /* display:flex;\n    flex-direction:column;\n    align-items:center; */\n    width:90%;\n`\n\nconst Editor = styled.div`\n    width:100%;\n`\n\n\nconst Date = styled.div`\n    position:absolute;\n    right:6px;\n    bottom:0px;\ncolor:${props => props.image ? \"white\" : \"black\"};\n    font-size: 12px;\n    font-weight: 800;\n`\nconst SubmitButton = styled.button`\n    position:fixed;\n    bottom:20px;\n    left:20px;\n    z-index: 3;\n`\n\n\nclass EditLogPage extends React.Component {\n\n    state = {\n        loading: true,\n        log: {},\n        logData: {},\n        privateAsArgs: true,\n        imageFile: '',\n        file: null,\n        title: \"\",\n        titleImageChanged: false,\n        uploading: false\n    }\n\n    async componentDidMount() {\n\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const response = await client.query({\n            query: getLog,\n            variables: {\n                id: logId,\n                userId\n            }\n        })\n        console.log('response:', response)\n        const log = response.data.log;\n        if (log === null) {\n            alert(`You don't have authority to access`);\n            window.location.href = \"/\"\n        }\n        const logData = response.data.log.logData;\n        console.log('logdata:', logData)\n        editor = new EditorJs({\n            holder: 'editorjs',\n            tools: {\n                linkTool: {\n                    class: LinkTool,\n                    config: {\n                        endpoint: uri + \":4000/api/fetchUrl\"\n                    }\n                },\n                header: {\n                    class: Header,\n                    inlineToolbar: ['link']\n                },\n                embed: {\n                    class: Embed,\n                    inlineToolbar: false,\n                    config: {\n                        services: {\n                            youtube: true\n                        }\n                    }\n                },\n\n                image: {\n                    class: ImageTool,\n                    config: {\n                        uploader: {\n                            uploadByFile(file) {\n                                const formData = new FormData();\n                                formData.append('file', file)\n                                formData.append('upload_preset', 'ndp6lsvf')\n                                const xhr = new XMLHttpRequest();\n                                xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                xhr.send(formData);\n                                const imageResponse = JSON.parse(xhr.responseText);\n                                console.log('image response: ', imageResponse);\n                                uploadedImagesPublicIds.push(imageResponse.public_id)\n                                return {\n                                    success: 1,\n                                    file: {\n                                        url: imageResponse.secure_url,\n                                        public_id: imageResponse.public_id\n                                    }\n                                }\n                            },\n                            uploadByUrl(url) {\n                                return fetch(url)\n                                    .then(res => res.blob())\n                                    .then(blob => {\n                                        blob.lastModifiedDate = new Date();\n                                        blob.name = \"imageFromUrl\"\n                                        let file = blob\n                                        const formData = new FormData();\n                                        formData.append('file', file);\n                                        formData.append('upload_preset', 'ndp6lsvf')\n                                        const xhr = new XMLHttpRequest();\n                                        xhr.open('POST', 'https://api.cloudinary.com/v1_1/blog-naver-com-donggyu-00/upload', false);\n                                        xhr.send(formData);\n                                        const imageResponse = JSON.parse(xhr.responseText);\n                                        console.log('image response:', imageResponse)\n                                        uploadedImagesPublicIds.push(imageResponse.public_id)\n                                        return {\n                                            success: 1,\n                                            file: {\n                                                url: imageResponse.secure_url,\n                                                publicId: imageResponse.public_id\n                                            }\n                                        }\n                                    })\n                            }\n                        }\n                    }\n                },\n\n            },\n            data: response.data.log.logData\n        })\n\n        console.log('private2:', response.data.log.private2)\n\n        this.setState({\n            loading: false,\n            log,\n            logData,\n            imageFile: response.data.log.image,\n            title: response.data.log.title,\n            privateAsArgs: response.data.log.private2\n\n        })\n    }\n    render() {\n        const { loading, log, privateAsArgs, imageFile, title, uploading } = this.state;\n        const { titleImageDeleteButtonClicked, titleImageUploadButtonClicked, handleInput, editButtonClicked } = this;\n        if (loading) {\n            return <Container>Loading....</Container>\n        } else {\n            return <Container>\n                <BackButton to={'/'} text={'logs'} />\n                <TitleComponent\n                    titleImageUploadButtonClicked={titleImageUploadButtonClicked}\n                    imageFile={imageFile}\n                    title={title}\n                    handleInput={handleInput}\n                    privateAsArgs={privateAsArgs}\n                    edit={true}\n                    titleImageDeleteButtonClicked={titleImageDeleteButtonClicked} />\n\n                <Editor id={'editorjs'} />\n                <SubmitButton onClick={editButtonClicked}>Edit</SubmitButton>\n                {uploading && <LoadingComponent />}\n            </Container>\n        }\n    }\n\n    requestToGraphqlServerInOrder = async (blockLength, blocks) => {\n        const { logId } = this.props.match.params;\n        if (counter === blockLength) {\n            this.setState({\n                uploading: false\n            })\n            window.location.href = `/log/${logId}`\n        } else {\n            const block = blocks[counter];\n            if (block.type === \"image\") {\n                const { url, public_id, publicId } = block.data.file;\n                console.log('block.data.file:', block.data.file);\n                console.log('public id', publicId)\n                let pbId = publicId;\n                console.log('public_id:', public_id)\n                console.log('publicId:', publicId)\n                console.log('pbId:', pbId)\n                if (pbId === null || pbId === undefined) {\n                    console.log('here')\n                    pbId = public_id\n                }\n                console.log('pbId:', pbId)\n                console.log('when you upload image:', block.data.file)\n                console.log(block.data)\n                const { caption, stretched, withBackground, withBorder } = block.data;\n                const variables = {\n                    logId,\n                    type: \"image\",\n                    imageUrl: url,\n                    stretched,\n                    caption,\n                    withBackground,\n                    withBorder,\n                    publicId: pbId\n                }\n                console.log('variables:', variables)\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"paragraph\") {\n                const { text } = block.data;\n                const variables = {\n                    logId,\n                    type: \"paragraph\",\n                    text\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"header\") {\n                const { text, level } = block.data;\n                const variables = {\n                    logId,\n                    type: \"header\",\n                    text,\n                    level\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n            } else if (block.type === \"linkTool\") {\n                const { link } = block.data;\n                const { description, title } = block.data.meta;\n                const { url } = block.data.meta.image;\n                const variables = {\n                    logId,\n                    type: \"linkTool\",\n                    link,\n                    title,\n                    description,\n                    image: url\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n\n            } else if (block.type === 'embed') {\n                const { service, source, embed, caption, height, width } = block.data;\n                const variables = {\n                    logId,\n                    type: \"embed\",\n                    service,\n                    source,\n                    embed,\n                    caption,\n                    height,\n                    width\n                }\n                // await addBlock({\n                //     variables\n                // })\n                await client.mutate({\n                    mutation: addBlock,\n                    variables\n                })\n\n                counter += 1;\n                this.requestToGraphqlServerInOrder(blockLength, blocks);\n\n\n            }\n\n        }\n    }\n\n    editButtonClicked = async () => {\n        this.setState({\n            uploading: true\n        })\n        const { title, titleImageChanged, file, privateAsArgs } = this.state;\n        const { logId } = this.props.match.params;\n        const userId = decodeToken();\n        const changeLogTitleResponse = await client.mutate({\n            mutation: changeLogTitle,\n            variables: {\n                id: logId,\n                newTitle: title,\n                privateAsArg: privateAsArgs === 'true'\n            }\n        }).then(() => {\n            // If log title changed\n            if (titleImageChanged) {\n\n                const formData = new FormData();\n                console.log('file', file)\n\n                formData.append('file', file);\n\n                fetch(uri + \":4000/api/image-to-cloudinary\", {\n                    method: 'POST',\n                    body: formData\n                }).then(res => {\n                    res.json().then(body => {\n                        const imageUrl = body.imageUrl;\n                        const imagePublicId = body.publicId;\n                        console.log('image url from server:', imageUrl);\n                        console.log('image public id from server:', imagePublicId)\n                        client.mutate({\n                            mutation: changeLogImage,\n                            variables: {\n                                id: logId,\n                                newImage: imageUrl,\n                                publicId: imagePublicId\n                            }\n                        }).then((result) => {\n                            console.log('change title image:', result);\n                            client.mutate({\n                                mutation: deleteAllLogsFromLog,\n                                variables: {\n                                    logId,\n                                    userId\n                                }\n                            }).then(() => {\n                                editor.save().then(outputData => {\n                                    console.log('outputdata:', outputData)\n                                    const blocks = outputData.blocks;\n                                    const blockLengths = blocks.length;\n\n                                    this.requestToGraphqlServerInOrder(blockLengths, blocks);\n\n                                })\n                            })\n                        })\n                    })\n\n\n\n                })\n\n\n\n            } else {\n                client.mutate({\n                    mutation: deleteAllLogsFromLog,\n                    variables: {\n                        logId,\n                        userId\n                    }\n                }).then(() => {\n                    editor.save().then(outputData => {\n                        console.log('outputdata:', outputData)\n                        const blocks = outputData.blocks;\n                        const blockLengths = blocks.length;\n\n                        this.requestToGraphqlServerInOrder(blockLengths, blocks);\n\n                    })\n                })\n            }\n\n\n\n\n        })\n\n        console.log('change log title response: ', changeLogTitleResponse)\n\n\n\n\n\n    }\n\n\n\n    waitForIt() {\n        if (isPaused) {\n            setTimeout(() => this.waitForIt(), 100)\n        }\n    }\n\n\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    titleImageUploadButtonClicked = e => {\n        console.log(URL.createObjectURL(e.target.files[0]))\n        console.log('file when file changed:', e.target.files[0]);\n        this.setState({\n            imageFile: URL.createObjectURL(e.target.files[0]),\n            file: e.target.files[0],\n            titleImageChanged: true\n        })\n\n        console.log('file changed', this.state)\n    }\n\n    titleImageDeleteButtonClicked = () => {\n        this.setState({\n            imageFile: '',\n            file: null,\n            titleImageChanged: true\n        })\n        console.log('file:', this.state.file)\n    }\n}\n\nexport default EditLogPage","import EditLogPage from './editLogPage';\nexport default EditLogPage","import PrivateComponent from './PrivateComponent';\nexport default PrivateComponent","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainComponent from './main';\nimport PostNewLog from './postNewLog';\nimport LogDetail from './logDetail';\nimport EditLogPage from './editLogPage';\n\n\nclass PrivateComponent extends React.Component {\n    render() {\n        return <Router>\n            <Switch>\n                <Route path={'/'} exact component={MainComponent} />\n                <Route path={'/post'} exact component={PostNewLog} />\n                <Route path={'/log/:logId'} exact component={LogDetail} />\n                <Route path={'/edit/log/:logId'} exact component={EditLogPage} />\n                <Route component={MainComponent} />\n            </Switch>\n        </Router>\n    }\n}\n\nexport default PrivateComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 130px;\n    user-select:none;\n`\n\nclass Copyright extends React.Component {\n    render() {\n        return <Container>\n            © 2019- shin donggyu All Rights Reserved\n        </Container>\n    }\n}\n\nexport default Copyright","import Copyright from './Copyright';\nexport default Copyright","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    height:7vh;\n    justify-content: flex-end;\n    z-index:1;\n    position: relative;\n`\n\nconst ButtonContainer = styled.div`\n    margin-right: 20px;\n    width: 166px;\n    display: flex;\n    justify-content: space-between;\n`\n\nconst SignInButton = styled.button`\n    border: 0;\n    font-size: 20px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    border-radius: 7px;\n    transition:0.7s;\n    background: white;\n    cursor: pointer;\n    &:hover {\n        color:white;\n        background:black;\n    }\n`\n\nconst SignUpButton = styled.button`\n    border: 0;\n    font-size: 20px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    border-radius: 7px;\n    transition:0.7s;\n    background: white;\n    cursor: pointer;\n    &:hover {\n        color:white;\n        background:black;\n    }\n`\n\nconst TitleLogo = styled.h1`\n    margin-left: 33px;\n    position: absolute;\n    left: 20px;\n    top: -2px;\n    cursor: pointer;\n    color:black;\n`\n\n\n\nclass NavigationBar extends React.Component {\n    render() {\n        return <Container>\n            <Link to={'/love-u'}>\n                <TitleLogo>R log</TitleLogo>\n            </Link>\n            <ButtonContainer>\n                <Link to={'/signin'}>\n                    <SignInButton>Sign In</SignInButton>\n                </Link>\n                <Link to={'/signup'}>\n                    <SignUpButton>Sign Up</SignUpButton>\n                </Link>\n            </ButtonContainer>\n        </Container>\n    }\n}\n\nexport default NavigationBar","import NavigationBar from './Navigation';\nexport default NavigationBar","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: absolute;\n    height: 100vh;\n    align-items: center;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nconst PhotoContainer = styled.div`\n    width:424px;\n    position: relative;\n    user-select:none;\n`\n\nconst Photo = styled.img`\n    width:100%;\n    border-radius: 7px;\n    user-select:none;\n`\n\nconst WhiteText = styled.div`\n    position:absolute;\n    top:0;\n    width:100%;\n    height:100%;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    color:white;\n    font-size: 32px;\n    text-shadow: 7px 5px 3px rgba(7,3,2,0.56);\n    user-select:none;\n`\n\nclass MyDoubleLucky extends React.Component {\n    render() {\n        return <Container>\n            <PhotoContainer>\n                <Photo src={require('../../../../assets/MyDoubleLucky.jpeg')} />\n                <WhiteText>\n                    Hello world!\n                </WhiteText>\n            </PhotoContainer>\n        </Container>\n    }\n}\n\nexport default MyDoubleLucky","import MyDoubleLucky from './MyDoubleLucky';\nexport default MyDoubleLucky","import React from 'react';\nimport styled from 'styled-components';\nimport Copyright from './copyright';\nimport NavigationBar from './navigation';\nimport MyDoubleLucky from './myDoubleLucky';\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    min-height:100vh;\n    width:100%;\n    position: relative;\n`\n\n\nclass PublicMainComponent extends React.Component {\n    render() {\n        return <Container>\n            <NavigationBar />\n            <MyDoubleLucky />\n            <Copyright />\n        </Container>\n    }\n}\n\nexport default PublicMainComponent","import PublicMainComponent from './MainComponent';\nexport default PublicMainComponent;","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\nconst Row = styled.div`\n    display:flex;\n    width: 60%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    justify-content:space-between;\n`\n\nconst Label = styled.div``\n\nconst UnderLine = styled.input.attrs(props => ({\n    disabled: true\n}))`\n    width: 55%;\n    border: 0;\n    border-bottom: 1px solid black;\n    outline: none;\n    text-align: center;\n    font-size: 13px;\n    padding-bottom: 6px;\n    background: transparent;\n`\n\nclass LabelComponent extends React.Component {\n    render() {\n        const {\n            name,\n            password,\n            checkPassword,\n            phone,\n            email\n        } = this.props;\n        return <Container>\n            <Row>\n                <Label>name:</Label>\n                <UnderLine value={name} />\n            </Row>\n            <Row>\n                <Label>password:</Label>\n                <UnderLine type={'password'} value={password} />\n            </Row>\n            <Row>\n                <Label>check password:</Label>\n                <UnderLine type={'password'} value={checkPassword} />\n            </Row>\n            <Row>\n                <Label>phone:</Label>\n                <UnderLine value={phone} />\n            </Row>\n            <Row>\n                <Label>email:</Label>\n                <UnderLine value={email} />\n            </Row>\n        </Container>\n    }\n}\n\nLabelComponent.propTypes = {\n    name: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    checkPassword: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired\n}\n\nexport default LabelComponent","import LabelComponent from './Label';\nexport default LabelComponent","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\n\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst InputComponent = styled.input`\n    width: 50%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 20px;\n    border-radius: 4px;\n    border: 2px solid gainsboro;\n    outline: none;\n    padding-left:10px;\n`\n\nconst Button = styled.button`\n    position: absolute;\n    top: 79%;\n    border: 0;\n    color: white;\n    background: black;\n    border-radius: 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    font-size: 14px;\n    cursor: pointer;\n    z-index: 1;\n`\n\n\nclass FormComponent extends React.Component {\n    render() {\n        const {\n            name,\n            password,\n            checkPassword,\n            phone,\n            email,\n            handleInput,\n            submitButtonClicked\n        } = this.props;\n        return <Container>\n            <InputComponent placeholder={'e.g) shin donggyu'} name={'name'} onChange={handleInput} value={name} />\n            <InputComponent placeholder={'e.g) ************'} name={'password'} type={'password'} onChange={handleInput} value={password} />\n            <InputComponent placeholder={'e.g) ************'} name={'checkPassword'} type={'password'} onChange={handleInput} value={checkPassword} />\n            <InputComponent placeholder={'e.g) 01093201234'} name={'phone'} onChange={handleInput} value={phone} />\n            <InputComponent placeholder={'nyaconnected@gmail.com'} name={'email'} onChange={handleInput} value={email} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n\n}\n\nFormComponent.propTypes = {\n    name: PropTypes.string.isRequired,\n    password: PropTypes.string.isRequired,\n    checkPassword: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    handleInput: PropTypes.func.isRequired\n}\n\nexport default FormComponent","import FormComponent from './Form';\nexport default FormComponent","import React from 'react'\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport LabelComponent from './label';\nimport FormComponent from './form';\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst addNewUserMutation = gql`\nmutation($name:String!, $email:String!, $phone:String!, $password:String!) {\n    addNewUser(name:$name, email:$email, phone:$phone, password:$password) {\n      id\n      name\n      email\n      phone\n      verified\n    }\n  }\n`\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    min-height:100vh;\n`\nconst SignInComponentsContainer = styled.div`\n    height:93vh;\n    display:flex;\n`\n\n\n\n\nclass SignInComponent extends React.Component {\n    state = {\n        name: \"\",\n        password: \"\",\n        checkPassword: \"\",\n        phone: \"\",\n        email: \"\"\n    }\n    render() {\n        const { name, password, checkPassword, phone, email } = this.state;\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <NavigationBar />\n            <SignInComponentsContainer>\n                <LabelComponent\n                    name={name}\n                    password={password}\n                    checkPassword={checkPassword}\n                    phone={phone}\n                    email={email}\n                />\n                <FormComponent\n                    name={name}\n                    password={password}\n                    checkPassword={checkPassword}\n                    phone={phone}\n                    email={email}\n                    handleInput={handleInput}\n                    submitButtonClicked={submitButtonClicked}\n                />\n            </SignInComponentsContainer>\n            <Copyright />\n        </Container>\n    }\n\n    submitButtonClicked = () => {\n        const { name, email, password, checkPassword, phone } = this.state;\n        const { addNewUserMutation } = this.props;\n        if (name === \"\" || email === \"\" || password === \"\" || checkPassword === \"\" || phone === \"\") {\n            alert('Please fill every form.')\n            return;\n        }\n        const phoneLength = phone.length\n        if (phoneLength !== 11) {\n            alert('Please check your phone number again. ')\n            return;\n        }\n\n        if (password !== checkPassword) {\n            alert('Double check your password. ')\n            return\n        }\n\n        const variables = {\n            name,\n            email,\n            password,\n            phone\n        }\n\n        console.log('here1')\n\n        addNewUserMutation({\n            variables\n        }).then(res => {\n            console.log(res)\n            return res.data\n        })\n            .then(data => {\n                console.log(data)\n                return data.addNewUser\n            })\n            .then(user => {\n                const { id } = user;\n                window.location.href = `/verify/${id}`\n            })\n            .catch(err => {\n                console.error(err.message)\n                alert('Duplicated phone number or email.')\n            })\n\n        console.log('here2')\n\n        this.setState({\n            name: \"\",\n            password: \"\",\n            checkPassword: \"\",\n            phone: \"\",\n            email: \"\"\n        })\n\n    }\n\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default compose(\n    graphql(addNewUserMutation, { name: 'addNewUserMutation' })\n)(SignInComponent)","import SignInComponent from './SignIn'\nexport default SignInComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Row = styled.div`\n    display:flex;\n    width: 60%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    justify-content:space-between;\n`\n\nconst Label = styled.div``\n\nconst UnderLine = styled.input.attrs(props => ({\n    disabled: true\n}))`\n    width: 55%;\n    border: 0;\n    border-bottom: 1px solid black;\n    outline: none;\n    text-align: center;\n    font-size: 13px;\n    padding-bottom: 6px;\n    background: transparent;\n`\n\nclass LabelComponent extends React.Component {\n\n    render() {\n        const { email, password } = this.props;\n        return <Container>\n            <Row>\n                <Label>email:</Label>\n                <UnderLine value={email} />\n            </Row>\n            <Row>\n                <Label>password:</Label>\n                <UnderLine value={password} type={'password'} />\n            </Row>\n        </Container>\n    }\n}\n\nexport default LabelComponent","import LabelComponent from './Label';\nexport default LabelComponent","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    position: relative;\n`\n\nconst InputComponent = styled.input`\n    width: 50%;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    height: 20px;\n    border-radius: 4px;\n    border: 2px solid gainsboro;\n    outline: none;\n    padding-left:10px;\n`\n\nconst Button = styled.button`\n    position: absolute;\n    top: 79%;\n    border: 0;\n    color: white;\n    background: black;\n    border-radius: 3px;\n    padding-left: 15px;\n    padding-right: 15px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    font-size: 14px;\n    cursor: pointer;\n    z-index:1;\n`\n\nclass FormComponent extends React.Component {\n    render() {\n        const {\n            handleInput,\n            email,\n            password,\n            submitButtonClicked\n        } = this.props;\n        return <Container>\n            <InputComponent onChange={handleInput} value={email} placeholder={'e.g) nyaconnected@gmail.com'} name={'email'} />\n            <InputComponent onChange={handleInput} type={'password'} value={password} placeholder={'e.g) ************'} name={'password'} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n}\n\nexport default FormComponent","import FormComponent from './Form';\nexport default FormComponent","import React from 'react';\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport LabelComponent from './label';\nimport FormComponent from './form';\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst loginMutation = gql`\nmutation($email:String!, $password:String!) {\n    login(email:$email, password:$password){\n      jwt\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    min-height:100vh;\n`\n\nconst LabelAndFormComponentsContainer = styled.div`\n    height:93vh;\n    display:flex;\n`\n\nclass SignUpComponent extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n    render() {\n        const { email, password } = this.state\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <NavigationBar />\n            <LabelAndFormComponentsContainer>\n                <LabelComponent email={email} password={password} />\n                <FormComponent submitButtonClicked={submitButtonClicked} handleInput={handleInput} email={email} password={password} />\n            </LabelAndFormComponentsContainer>\n            <Copyright />\n        </Container>\n    }\n\n    submitButtonClicked = () => {\n        const { email, password } = this.state;\n        const { loginMutation } = this.props;\n        const variables = {\n            email,\n            password\n        }\n        loginMutation({\n            variables\n        })\n            .then(res => res.data.login)\n            .then(result => {\n                console.log(result)\n                if (result.jwt === 'Not verified') {\n                    alert('Not verified account')\n                } else if (result.jwt === null) {\n                    alert('Check your email and password');\n\n                } else {\n                    localStorage.setItem('jwt', result.jwt)\n                    window.location.href = '/'\n                }\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n}\n\nexport default compose(\n    graphql(loginMutation, { name: 'loginMutation' })\n)(SignUpComponent)","import SignUpComponent from './signup';\nexport default SignUpComponent","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom'\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'redux'\n\nconst allocateAuthKeyToUser = gql`\nmutation($userId:String!) {\n    allocateVerifyKeyToUser(userId:$userId) {\n      id\n      verifyKey\n    }\n  }\n`\n\nconst verifyUser = gql`\nmutation($userId:String!, $verifyKey:String!) {\n    verifyUser(userId:$userId, verifyKey:$verifyKey) {\n      verified\n      id\n    }\n  }\n`\n\n\nconst Container = styled.div`\n    height:97vh;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Text = styled.div``\n\nconst Input = styled.input`\n    width: 16%;\n    text-align: center;\n    \n    border: 0;\n    border-bottom: 1px solid black;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    padding-bottom: 10px;\n    font-size: 20px;\n    font-weight: 500;\n    outline: none;\n`\n\nconst Button = styled.button`\n    font-size:13px;\n`\n\nclass FormComponent extends React.Component {\n\n    state = {\n        verifyKey: \"\"\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params\n        const { allocateAuthKeyToUser } = this.props;\n        const variables = {\n            userId: id\n        }\n        allocateAuthKeyToUser({\n            variables\n        }).then(res => res.data)\n            .then(data => {\n                return\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n\n    render() {\n        const { verifyKey } = this.state;\n        const { handleInput, submitButtonClicked } = this;\n        return <Container>\n            <Text>\n                We sent you the authentication key by the mobile message.\n            </Text>\n            <Text>\n                If you can't get message, please contact me, donggyu9410gmail.com\n            </Text>\n            <Input onChange={handleInput} value={verifyKey} name={'verifyKey'} placeholder={'e.g) 0629'} />\n            <Button onClick={submitButtonClicked}>Submit</Button>\n        </Container>\n    }\n\n    handleInput = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    submitButtonClicked = () => {\n        const { verifyUser } = this.props;\n        const { id } = this.props.match.params\n        const { verifyKey } = this.state;\n        const variables = {\n            userId: id,\n            verifyKey\n        }\n        verifyUser({\n            variables\n        }).then(res => res.data)\n            .then(data => data.verifyUser)\n            .then(verifyUser => {\n                if (verifyUser.verified) {\n                    window.location.href = '/signin'\n                } else {\n                    alert('Fail to verify user. ')\n                }\n            })\n            .catch(err => {\n                alert(err.message)\n            })\n    }\n}\n\nexport default withRouter(compose(\n    graphql(allocateAuthKeyToUser, { name: 'allocateAuthKeyToUser' }),\n    graphql(verifyUser, { name: 'verifyUser' })\n)(FormComponent))","import FormComponent from './Form';\nexport default FormComponent","import React from 'react'\nimport styled from 'styled-components';\nimport NavigationBar from '../main/navigation';\nimport Copyright from '../main/copyright';\nimport FormComponent from './form';\n\nconst Container = styled.div``\n\nclass Verify extends React.Component {\n    render() {\n        return <Container>\n            <NavigationBar />\n            <FormComponent />\n            <Copyright />\n        </Container>\n    }\n\n\n}\n\nexport default Verify","import VerifyComponent from './Verify';\nexport default VerifyComponent","import PublicComponent from './PublicComponent';\nexport default PublicComponent","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport PublicMainComponent from './main';\nimport SignInComponent from './signin';\nimport SignUpComponent from './signup';\nimport VerifyComponent from './verify';\n\n\nclass PublicComponent extends React.Component {\n    render() {\n        return <Router>\n            <Switch>\n                <Route path={\"/\"} exact component={PublicMainComponent} />\n                <Route path={'/signin'} exact component={SignUpComponent} />\n                <Route path={'/signup'} exact component={SignInComponent} />\n                <Route path={'/verify/:id'} exact component={VerifyComponent} />\n                <Route component={PublicMainComponent} />\n            </Switch>\n        </Router>\n    }\n}\n\nexport default PublicComponent","import React from 'react';\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\nimport PrivateComponent from 'components/private';\nimport PublicComponent from 'components/public';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nlet uri = \"http://localhost:4000/graphql\"\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  // dev code\n} else {\n  // production code\n  uri = \"https://www.rlog.link:4000/graphql\"\n}\n\nexport const client = new ApolloClient({\n  uri\n})\n\nconst AlphaTestVersion = styled.div`\n  position:absolute;\n  top:5px;\n  left:5px;\n`\n\n\nconst Container = styled.div``\n\nclass AppContainer extends React.Component {\n  state = {\n    isLoggedIn: localStorage.getItem('jwt') === null ? false : true\n  }\n  render() {\n    const { isLoggedIn } = this.state\n    return <ApolloProvider client={client}>\n      <App isLoggedIn={isLoggedIn} />\n    </ApolloProvider>\n  }\n}\n\n\n\nfunction App(props) {\n  const { isLoggedIn } = props;\n  return (\n    <Container>\n      {/* <AlphaTestVersion>\n        alpha test version.\n      </AlphaTestVersion> */}\n      {isLoggedIn ? <PrivateComponent /> : <PublicComponent />}\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}